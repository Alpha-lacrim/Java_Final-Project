Index: src/main/java/org/example/myfinalproject/AddManagerSceneController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.myfinalproject;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseButton;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AddManagerSceneController implements Initializable {\r\n    //Department variables.\r\n    File departmentFile = new File(\"Department.txt\");\r\n    ObservableList<Department> departmentObservableList;\r\n    ArrayList<Department> departmentArrayList = new ArrayList<>();\r\n\r\n    // Status combobox\r\n    ObservableList<Status> statusObservableList;\r\n    ArrayList<Status> statusArrayList = new ArrayList<>();\r\n\r\n    // manager base salary variables.\r\n    @FXML\r\n    private TableView<BaseSalariedEmployee> managerBaseSalaryTable;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Double> managerBaseSalaryBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Double> managerBaseSalaryColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Department> managerBaseSalaryDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Double> managerBaseSalaryEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Integer> managerBaseSalaryIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryPhoneColumn;\r\n\r\n    File baseSalariedFile = new File(\"BaseSalaried.txt\");\r\n    ObservableList<BaseSalariedEmployee> managerBaseSalariedEmployeeObservableList;\r\n    ArrayList<BaseSalariedEmployee> baseSalariedArrayList = new ArrayList<>();\r\n    ArrayList<BaseSalariedEmployee> managerBaseSalariedArrayList = new ArrayList<>();\r\n\r\n    //manager hourly salaried variables.\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryAmountOfHoursColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Department> managerHourlySalaryDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Integer> managerHourlySalaryIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryPayColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryPhoneColumn;\r\n\r\n    @FXML\r\n    private TableView<HourlySalariedEmployee> managerHourlySalaryTable;\r\n\r\n    File hourlySalaryFile = new File(\"HourlySalaried.txt\");\r\n    ObservableList<HourlySalariedEmployee> managerHourlySalariedEmployeeObservableList;\r\n    ArrayList<HourlySalariedEmployee> hourlySalariedArrayList = new ArrayList<>();\r\n    ArrayList<HourlySalariedEmployee> managerHourlySalariedArrayList = new ArrayList<>();\r\n\r\n    //manager commission salaried variables.\r\n    @FXML\r\n    private TableView<CommissionSalariedEmployee> managerCommissionSalaryTable;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Double> managerCommissionSalaryBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Department> managerCommissionSalaryDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Double> managerCommissionSalaryEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Integer> managerCommissionSalaryIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryPhoneColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Double> managerCommissionSalaryRateColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Integer> managerCommissionSalarySalesColumn;\r\n\r\n    File commissionSalaryFile = new File(\"CommissionSalaried.txt\");\r\n    ObservableList<CommissionSalariedEmployee> managerCommissionSalariedEmployeeObservableList;\r\n    ArrayList<CommissionSalariedEmployee> commissionSalariedArrayList = new ArrayList<>();\r\n    ArrayList<CommissionSalariedEmployee> managerCommissionSalariedArrayList = new ArrayList<>();\r\n\r\n    //manager commission base salaried variables.\r\n    @FXML\r\n    private TableView<CommissionBaseSalariedEmployee> managerCommissionBaseTable;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Double> managerCommissionBaseBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Department> managerCommissionBaseDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Double> managerCommissionBaseEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Integer> managerCommissionBaseIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, Integer> managerCommissionBaseNumberOfSalesColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, String> managerCommissionBasePhoneColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, Double> managerCommissionBaseRateColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, Double> managerCommissionBaseSalaryColumn;\r\n\r\n    File commissionBaseSalaryFile = new File(\"CommissionBaseSalaried.txt\");\r\n    ObservableList<CommissionBaseSalariedEmployee> managerCommissionBaseSalariedEmployeeObservableList;\r\n    ArrayList<CommissionBaseSalariedEmployee> commissionBaseSalariedArrayList = new ArrayList<>();\r\n    ArrayList<CommissionBaseSalariedEmployee> managerCommissionBaseSalariedArrayList = new ArrayList<>();\r\n\r\n    //constant textFields in add manager Scene.\r\n\r\n    @FXML\r\n    private TextField nameField;\r\n\r\n    @FXML\r\n    private TextField familyField;\r\n\r\n    @FXML\r\n    private TextField nationalIdField;\r\n\r\n    @FXML\r\n    private TextField phoneField;\r\n\r\n    @FXML\r\n    private TextField baseSalaryField;\r\n\r\n    @FXML\r\n    private TextField managerBonusField;\r\n\r\n    @FXML\r\n    private DatePicker birthDatePicker;\r\n\r\n    @FXML\r\n    private ComboBox<Department> DepartmentCombo;\r\n\r\n    @FXML\r\n    private ComboBox<Status> statusCombo;\r\n\r\n    @FXML\r\n    private TextField PayPerHourField;\r\n\r\n    @FXML\r\n    private TextField amountOfHoursField;\r\n\r\n    @FXML\r\n    private TextField commissionRateField;\r\n\r\n    @FXML\r\n    private TextField numberOfSalesField;\r\n\r\n    @FXML\r\n    private TextField commissionRateField2;\r\n\r\n    @FXML\r\n    private TextField numberOfSalesField2;\r\n\r\n    @FXML\r\n    private ComboBox<String> managerPickTypeCombo;\r\n\r\n    @FXML\r\n    private Button applyButton;\r\n\r\n    @FXML\r\n    private Button applyButton2;\r\n\r\n    @FXML\r\n    private Button cancelButton;\r\n\r\n    @FXML\r\n    private Button cancelButton2;\r\n\r\n    @FXML\r\n    private Button editButton;\r\n\r\n    @FXML\r\n    private RadioButton employeeRadioButton;\r\n\r\n    @FXML\r\n    private RadioButton managerRadioButton;\r\n\r\n    ObservableList<String> typeOfEmployee = FXCollections.observableArrayList(\"base-salaried\",\"hourly-salaried\",\r\n            \"commission-salaried\",\"base-commission salaried\");\r\n\r\n\r\n\r\n    @FXML\r\n    void onAddManagerButton(ActionEvent event) {\r\n        var type = (String) managerPickTypeCombo.getSelectionModel().getSelectedItem();\r\n\r\n        try {\r\n            var department = (Department) DepartmentCombo.getSelectionModel().getSelectedItem();\r\n            switch (type) {\r\n                case \"base-salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var baseSalariedEmp = new BaseSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(baseSalaryField.getText()));\r\n                        departmentWriteToFile();\r\n                        baseSalariedArrayList.add(baseSalariedEmp);\r\n                        managerBaseSalariedArrayList.add(baseSalariedEmp);\r\n                        managerBaseSalariedEmployeeObservableList = managerBaseSalaryTable.getItems();\r\n                        managerBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerBaseSalariedArrayList);\r\n                        managerBaseSalaryTable.setItems(managerBaseSalariedEmployeeObservableList);\r\n                        baseSalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n                case \"hourly-salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var hourlySalariedEmp = new HourlySalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(PayPerHourField.getText())\r\n                                ,Double.parseDouble(amountOfHoursField.getText()));\r\n                        departmentWriteToFile();\r\n                        hourlySalariedArrayList.add(hourlySalariedEmp);\r\n                        managerHourlySalariedArrayList.add(hourlySalariedEmp);\r\n                        managerHourlySalariedEmployeeObservableList = managerHourlySalaryTable.getItems();\r\n                        managerHourlySalariedEmployeeObservableList = FXCollections.observableArrayList(managerHourlySalariedArrayList);\r\n                        managerHourlySalaryTable.setItems(managerHourlySalariedEmployeeObservableList);\r\n                        hourlySalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        PayPerHourField.setText(\"\");\r\n                        amountOfHoursField.setText(\"\");\r\n                    } else{\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n                case \"commission-salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var commissionSalariedEmp = new CommissionSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(commissionRateField.getText())\r\n                                ,Integer.parseInt(numberOfSalesField.getText()));\r\n                        departmentWriteToFile();\r\n                        commissionSalariedArrayList.add(commissionSalariedEmp);\r\n                        managerCommissionSalariedArrayList.add(commissionSalariedEmp);\r\n                        managerCommissionSalariedEmployeeObservableList = managerCommissionSalaryTable.getItems();\r\n                        managerCommissionSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionSalariedArrayList);\r\n                        managerCommissionSalaryTable.setItems(managerCommissionSalariedEmployeeObservableList);\r\n                        commissionSalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        commissionRateField.setText(\"\");\r\n                        numberOfSalesField.setText(\"\");\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n                case \"base-commission salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var commissionBaseSalariedEmp = new CommissionBaseSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department,Double.parseDouble(baseSalaryField.getText())\r\n                                , Double.parseDouble(commissionRateField2.getText())\r\n                                ,Integer.parseInt(numberOfSalesField2.getText()));\r\n                        departmentWriteToFile();\r\n                        commissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);\r\n                        managerCommissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);\r\n                        managerCommissionBaseSalariedEmployeeObservableList = managerCommissionBaseTable.getItems();\r\n                        managerCommissionBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionBaseSalariedArrayList);\r\n                        managerCommissionBaseTable.setItems(managerCommissionBaseSalariedEmployeeObservableList);\r\n                        commissionBaseSalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n                        commissionRateField2.setText(\"\");\r\n                        numberOfSalesField2.setText(\"\");\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (Exception e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"SELECTION ERROR!\");\r\n            alert.setContentText(\"Select a Salary Type and a Department for the Employee ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onBackButton(ActionEvent event) throws IOException {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setTitle(\"Confirmation\");\r\n        alert.setContentText(\"Are you sure you want to go back?\");\r\n        alert.showAndWait();\r\n        if(alert.getResult().equals(ButtonType.OK)){\r\n            Stage stage;\r\n            Scene scene;\r\n            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"MainScene.fxml\"));\r\n            stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            scene = new Scene(fxmlLoader.load());\r\n            stage.setScene(scene);\r\n            stage.setResizable(false);\r\n            stage.show();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onEditButton(ActionEvent event) throws IOException {\r\n            statusCombo.setVisible(true);\r\n            applyButton.setVisible(true);\r\n            cancelButton.setVisible(true);\r\n            employeeRadioButton.setVisible(true);\r\n            managerRadioButton.setVisible(true);\r\n\r\n\r\n            switch (managerPickTypeCombo.getValue()) {\r\n                    case \"base-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        baseSalaryField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n\r\n                    case \"base-commission salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        numberOfSalesField2.setEditable(true);\r\n                        baseSalaryField.setEditable(true);\r\n                        commissionRateField2.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n\r\n                    case \"hourly-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        PayPerHourField.setEditable(true);\r\n                        amountOfHoursField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n\r\n                    case \"commission-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        numberOfSalesField.setEditable(true);\r\n                        commissionRateField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n            }\r\n    }\r\n\r\n    @FXML\r\n    void onCancelButton(ActionEvent event) throws  IOException {\r\n        statusCombo.setVisible(false);\r\n        applyButton.setVisible(false);\r\n        cancelButton.setVisible(false);\r\n        employeeRadioButton.setVisible(false);\r\n        managerRadioButton.setVisible(false);\r\n\r\n\r\n            switch (managerPickTypeCombo.getValue()) {\r\n                case \"base-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    baseSalaryField.setEditable(false);\r\n                    managerBonusField.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n\r\n                case \"base-commission salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    baseSalaryField.setEditable(false);\r\n                    managerBonusField.setEditable(false);\r\n                    numberOfSalesField2.setEditable(false);\r\n                    commissionRateField2.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n\r\n                case \"hourly-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    managerBonusField.setEditable(false);\r\n                    PayPerHourField.setEditable(false);\r\n                    amountOfHoursField.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n\r\n                case \"commission-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    managerBonusField.setEditable(false);\r\n                    numberOfSalesField.setEditable(false);\r\n                    commissionRateField.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n            }\r\n    }\r\n\r\n    @FXML\r\n    void onApplyButton(ActionEvent event) throws IOException {\r\n        // Define this button\r\n    }\r\n\r\n    @FXML\r\n    void onApplyButton2(ActionEvent event) {\r\n        int index=0;\r\n        String departmentName;\r\n        switch (managerPickTypeCombo.getValue()) {\r\n            case \"base-salaried\":\r\n                BaseSalariedEmployee emp = managerBaseSalaryTable.getSelectionModel().getSelectedItem();\r\n                departmentName= emp.getDepartment().getName();\r\n\r\n                for( Department department : departmentArrayList){\r\n                    if(department.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department);\r\n                    }\r\n                }\r\n                emp.setActive(false);\r\n                emp.setEndDate(LocalDate.now().toString());\r\n                emp.setStatus(statusCombo.getValue());\r\n                Department department = emp.getDepartment();\r\n                department.setHasManager(false);\r\n                department.setNumberOfActiveEmployees(department.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department);\r\n                baseSalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                managerBaseSalaryTable.getItems().remove(emp);\r\n                break;\r\n\r\n            case \"base-commission salaried\":\r\n                CommissionBaseSalariedEmployee emp1 = managerCommissionBaseTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp1.getDepartment().getName();\r\n\r\n                for(Department department1 : departmentArrayList){\r\n                    if(department1.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department1);\r\n                    }\r\n                }\r\n                emp1.setActive(false);\r\n                emp1.setEndDate(LocalDate.now().toString());\r\n                emp1.setStatus(statusCombo.getValue());\r\n                Department department1 = emp1.getDepartment();\r\n                department1.setHasManager(false);\r\n                department1.setNumberOfActiveEmployees(department1.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department1);\r\n                commissionBaseSalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                managerCommissionBaseTable.getItems().remove(emp1);\r\n                break;\r\n\r\n            case \"hourly-salaried\":\r\n                HourlySalariedEmployee emp2 = managerHourlySalaryTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp2.getDepartment().getName();\r\n\r\n                for(Department department2 : departmentArrayList){\r\n                    if(department2.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department2);\r\n                    }\r\n                }\r\n                emp2.setActive(false);\r\n                emp2.setEndDate(LocalDate.now().toString());\r\n                emp2.setStatus(statusCombo.getValue());\r\n                Department department2 = emp2.getDepartment();\r\n                department2.setHasManager(false);\r\n                department2.setNumberOfActiveEmployees(department2.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department2);\r\n                hourlySalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                managerHourlySalaryTable.getItems().remove(emp2);\r\n                break;\r\n\r\n            case \"commission-salaried\":\r\n                CommissionSalariedEmployee emp3 = managerCommissionSalaryTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp3.getDepartment().getName();\r\n\r\n                for(Department department3 : departmentArrayList){\r\n                    if(department3.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department3);\r\n                    }\r\n                }\r\n                emp3.setActive(false);\r\n                emp3.setEndDate(LocalDate.now().toString());\r\n                emp3.setStatus(statusCombo.getValue());\r\n                Department department3 = emp3.getDepartment();\r\n                department3.setHasManager(false);\r\n                department3.setNumberOfActiveEmployees(department3.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department3);\r\n                commissionSalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                managerCommissionSalaryTable.getItems().remove(emp3);\r\n                break;\r\n        }\r\n        statusCombo.setVisible(false);\r\n        applyButton2.setVisible(false);\r\n        cancelButton2.setVisible(false);\r\n        switch (managerPickTypeCombo.getValue()) {\r\n            case \"base-salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                baseSalaryField.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                baseSalaryField.setText(\"\");\r\n\r\n                break;\r\n\r\n            case \"base-commission salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                numberOfSalesField2.setEditable(true);\r\n                baseSalaryField.setEditable(true);\r\n                commissionRateField2.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                baseSalaryField.setText(\"\");\r\n                commissionRateField2.setText(\"\");\r\n                numberOfSalesField2.setText(\"\");\r\n                break;\r\n\r\n            case \"hourly-salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                PayPerHourField.setEditable(true);\r\n                amountOfHoursField.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                PayPerHourField.setText(\"\");\r\n                amountOfHoursField.setText(\"\");\r\n                break;\r\n\r\n            case \"commission-salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                numberOfSalesField.setEditable(true);\r\n                commissionRateField.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                baseSalaryField.setText(\"\");\r\n                commissionRateField.setText(\"\");\r\n                numberOfSalesField.setText(\"\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onCancelButton2(ActionEvent event) {\r\n        statusCombo.setVisible(false);\r\n        applyButton2.setVisible(false);\r\n        cancelButton2.setVisible(false);\r\n    }\r\n\r\n    @FXML\r\n    void onDeActiveButton(ActionEvent event) {\r\n        statusCombo.setVisible(true);\r\n        applyButton2.setVisible(true);\r\n        cancelButton2.setVisible(true);\r\n    }\r\n\r\n    @FXML\r\n    void onEmployeeRadio(ActionEvent event) throws  IOException {\r\n        if (employeeRadioButton.isSelected()) {\r\n            managerRadioButton.setDisable(true);\r\n        }\r\n        else {\r\n            managerRadioButton.setDisable(false);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onManagerRadio(ActionEvent event) throws  IOException {\r\n        if (managerRadioButton.isSelected()) {\r\n            employeeRadioButton.setDisable(true);\r\n        }\r\n        else {\r\n            employeeRadioButton.setDisable(false);\r\n        }\r\n    }\r\n    //get items from table.\r\n    @FXML\r\n    void managerBaseSalaryTableGetItem(MouseEvent event) {\r\n        int index = managerBaseSalaryTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"base-salaried\");\r\n        nameField.setText(managerBaseSalaryNameColumn.getCellData(index));\r\n        familyField.setText(managerBaseSalaryFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerBaseSalaryNationalColumn.getCellData(index));\r\n        phoneField.setText(managerBaseSalaryPhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerBaseSalaryBirthColumn.getCellData(index)));\r\n        baseSalaryField.setText(String.valueOf(managerBaseSalaryColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerBaseSalaryBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerBaseSalaryDepartmentColumn.getCellData(index));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        baseSalaryField.setEditable(false);\r\n        managerBonusField.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n\r\n    }\r\n\r\n    @FXML\r\n    void managerCommissionBaseSalaryTableGetItem(MouseEvent event) {\r\n        int index = managerCommissionBaseTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"base-commission salaried\");\r\n        nameField.setText(managerCommissionBaseNameColumn.getCellData(index));\r\n        familyField.setText(managerCommissionBaseFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerCommissionBaseNationalColumn.getCellData(index));\r\n        phoneField.setText(managerCommissionBasePhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerCommissionBaseBirthColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerCommissionBaseBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerCommissionBaseDepartmentColumn.getCellData(index));\r\n        baseSalaryField.setText(String.valueOf(managerCommissionBaseSalaryColumn.getCellData(index)));\r\n        numberOfSalesField2.setText(String.valueOf(managerCommissionBaseNumberOfSalesColumn.getCellData(index)));\r\n        commissionRateField2.setText(String.valueOf(managerCommissionBaseRateColumn.getCellData(index)));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        baseSalaryField.setEditable(false);\r\n        managerBonusField.setEditable(false);\r\n        numberOfSalesField2.setEditable(false);\r\n        commissionRateField2.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n\r\n    }\r\n\r\n    @FXML\r\n    void managerCommissionSalaryTableGetItem(MouseEvent event) {\r\n        int index = managerCommissionSalaryTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"commission-salaried\");\r\n        nameField.setText(managerCommissionSalaryNameColumn.getCellData(index));\r\n        familyField.setText(managerCommissionSalaryFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerCommissionSalaryNationalColumn.getCellData(index));\r\n        phoneField.setText(managerCommissionSalaryPhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerCommissionSalaryBirthColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerCommissionSalaryBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerCommissionSalaryDepartmentColumn.getCellData(index));\r\n        numberOfSalesField.setText(String.valueOf(managerCommissionSalarySalesColumn.getCellData(index)));\r\n        commissionRateField.setText(String.valueOf(managerCommissionSalaryRateColumn.getCellData(index)));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        managerBonusField.setEditable(false);\r\n        numberOfSalesField.setEditable(false);\r\n        commissionRateField.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n    }\r\n\r\n    @FXML\r\n    void managerHourlySalaryTableGetItem(MouseEvent event) {\r\n        int index = managerHourlySalaryTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"hourly-salaried\");\r\n        nameField.setText(managerHourlySalaryNameColumn.getCellData(index));\r\n        familyField.setText(managerHourlySalaryFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerHourlySalaryNationalColumn.getCellData(index));\r\n        phoneField.setText(managerHourlySalaryPhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerHourlySalaryBirthColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerHourlySalaryBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerHourlySalaryDepartmentColumn.getCellData(index));\r\n        PayPerHourField.setText(String.valueOf(managerHourlySalaryPayColumn.getCellData(index)));\r\n        amountOfHoursField.setText(String.valueOf(managerHourlySalaryAmountOfHoursColumn.getCellData(index)));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        managerBonusField.setEditable(false);\r\n        PayPerHourField.setEditable(false);\r\n        amountOfHoursField.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n\r\n    }\r\n\r\n    @FXML\r\n    void unlockFields(MouseEvent event) {\r\n        if(event.getClickCount() == 2) {\r\n            statusCombo.setVisible(false);\r\n            applyButton.setVisible(false);\r\n            cancelButton.setVisible(false);\r\n            employeeRadioButton.setVisible(false);\r\n            managerRadioButton.setVisible(false);\r\n            switch (managerPickTypeCombo.getValue()) {\r\n                case \"base-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    baseSalaryField.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    baseSalaryField.setText(\"\");\r\n\r\n                    break;\r\n\r\n                case \"base-commission salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    numberOfSalesField2.setEditable(true);\r\n                    baseSalaryField.setEditable(true);\r\n                    commissionRateField2.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    baseSalaryField.setText(\"\");\r\n                    commissionRateField2.setText(\"\");\r\n                    numberOfSalesField2.setText(\"\");\r\n                    break;\r\n\r\n                case \"hourly-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    PayPerHourField.setEditable(true);\r\n                    amountOfHoursField.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    PayPerHourField.setText(\"\");\r\n                    amountOfHoursField.setText(\"\");\r\n                    break;\r\n\r\n                case \"commission-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    numberOfSalesField.setEditable(true);\r\n                    commissionRateField.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    baseSalaryField.setText(\"\");\r\n                    commissionRateField.setText(\"\");\r\n                    numberOfSalesField.setText(\"\");\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onManagerPickTypeCombo(ActionEvent event) {\r\n        switch (managerPickTypeCombo.getValue()) {\r\n            case \"base-salaried\":\r\n                managerBaseSalaryTable.setVisible(true);\r\n                baseSalaryField.setVisible(true);\r\n                managerHourlySalaryTable.setVisible(false);\r\n                PayPerHourField.setVisible(false);\r\n                amountOfHoursField.setVisible(false);\r\n                commissionRateField.setVisible(false);\r\n                numberOfSalesField.setVisible(false);\r\n                managerCommissionSalaryTable.setVisible(false);\r\n                managerCommissionBaseTable.setVisible(false);\r\n                numberOfSalesField2.setVisible(false);\r\n                commissionRateField2.setVisible(false);\r\n\r\n                break;\r\n\r\n            case \"base-commission salaried\":\r\n                managerBaseSalaryTable.setVisible(false);\r\n                baseSalaryField.setVisible(true);\r\n                managerHourlySalaryTable.setVisible(false);\r\n                PayPerHourField.setVisible(false);\r\n                amountOfHoursField.setVisible(false);\r\n                commissionRateField.setVisible(false);\r\n                numberOfSalesField.setVisible(false);\r\n                managerCommissionSalaryTable.setVisible(false);\r\n                managerCommissionBaseTable.setVisible(true);\r\n                numberOfSalesField2.setVisible(true);\r\n                commissionRateField2.setVisible(true);\r\n\r\n                break;\r\n\r\n            case \"hourly-salaried\":\r\n                managerBaseSalaryTable.setVisible(false);\r\n                baseSalaryField.setVisible(false);\r\n                managerHourlySalaryTable.setVisible(true);\r\n                PayPerHourField.setVisible(true);\r\n                amountOfHoursField.setVisible(true);\r\n                commissionRateField.setVisible(false);\r\n                numberOfSalesField.setVisible(false);\r\n                managerCommissionSalaryTable.setVisible(false);\r\n                managerCommissionBaseTable.setVisible(false);\r\n                numberOfSalesField2.setVisible(false);\r\n                commissionRateField2.setVisible(false);\r\n\r\n                break;\r\n\r\n            case \"commission-salaried\":\r\n                managerBaseSalaryTable.setVisible(false);\r\n                baseSalaryField.setVisible(false);\r\n                managerHourlySalaryTable.setVisible(false);\r\n                PayPerHourField.setVisible(false);\r\n                amountOfHoursField.setVisible(false);\r\n                commissionRateField.setVisible(true);\r\n                numberOfSalesField.setVisible(true);\r\n                managerCommissionSalaryTable.setVisible(true);\r\n                managerCommissionBaseTable.setVisible(false);\r\n                numberOfSalesField2.setVisible(false);\r\n                commissionRateField2.setVisible(false);\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        //manger base salary set table view.\r\n        managerBaseSalaryColumn.setCellValueFactory(new PropertyValueFactory<>(\"baseSalary\"));\r\n        managerBaseSalaryEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerBaseSalaryBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerBaseSalaryBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerBaseSalaryFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerBaseSalaryIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerBaseSalaryNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerBaseSalaryNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerBaseSalaryPhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        managerBaseSalaryDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        baseSalaryReadFromFile();\r\n        //manager hourly salary set table view.\r\n        managerHourlySalaryAmountOfHoursColumn.setCellValueFactory(new PropertyValueFactory<>(\"amountOfHours\"));\r\n        managerHourlySalaryBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerHourlySalaryBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerHourlySalaryDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        managerHourlySalaryEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerHourlySalaryFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerHourlySalaryIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerHourlySalaryNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerHourlySalaryNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerHourlySalaryPayColumn.setCellValueFactory(new PropertyValueFactory<>(\"payPerHour\"));\r\n        managerHourlySalaryPhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        hourlySalaryReadFromFile();\r\n        //manager commission Salary set table view.\r\n        managerCommissionSalaryBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerCommissionSalaryBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerCommissionSalaryDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        managerCommissionSalaryEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerCommissionSalaryFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerCommissionSalaryIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerCommissionSalaryNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerCommissionSalaryNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerCommissionSalaryPhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        managerCommissionSalaryRateColumn.setCellValueFactory(new PropertyValueFactory<>(\"commissionRate\"));\r\n        managerCommissionSalarySalesColumn.setCellValueFactory(new PropertyValueFactory<>(\"numberOfSales\"));\r\n        commissionSalaryReadFromFile();\r\n        //manager commission salary set table view.\r\n        managerCommissionBaseBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerCommissionBaseBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerCommissionBaseDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        managerCommissionBaseEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerCommissionBaseFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerCommissionBaseIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerCommissionBaseNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerCommissionBaseNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerCommissionBaseNumberOfSalesColumn.setCellValueFactory(new PropertyValueFactory<>(\"numberOfSales\"));\r\n        managerCommissionBasePhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        managerCommissionBaseRateColumn.setCellValueFactory(new PropertyValueFactory<>(\"commissionRate\"));\r\n        managerCommissionBaseSalaryColumn.setCellValueFactory(new PropertyValueFactory<>(\"baseSalary\"));\r\n        commissionBaseSalaryReadFromFile();\r\n        //initialize department comboBox and pick type combo box.\r\n        departmentReadFromFile();\r\n        managerPickTypeCombo.setItems(typeOfEmployee);\r\n        DepartmentCombo.setItems(departmentObservableList);\r\n\r\n        // Initializing Status Combobox\r\n        statusArrayList.add(Status.NO_PAY_DISMISSAL);\r\n        statusArrayList.add(Status.FIRED);\r\n        statusArrayList.add(Status.RETIRED);\r\n        statusArrayList.add(Status.END_OF_CONTRACT);\r\n        statusObservableList = FXCollections.observableArrayList(statusArrayList);\r\n        statusCombo.setItems(statusObservableList);\r\n\r\n\r\n//        Remember to add these lines later:\r\n//        if (managerRadioButton.isSelected()) {\r\n//            managerBonusTextField.setVisible(true);\r\n//        }\r\n//        else {\r\n//            managerBonusTextField.setVisible(false);\r\n//        }\r\n    }\r\n\r\n    // department read and write to file method.\r\n    private void departmentReadFromFile() {\r\n        if(departmentFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(departmentFile));\r\n                departmentArrayList = (ArrayList<Department>) ois.readObject();\r\n                ois.close();\r\n                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no department to show ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void departmentWriteToFile() {\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(departmentFile));\r\n            oos.writeObject(departmentArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in Department file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    //base Salary read and write to file methods.\r\n    private void baseSalaryReadFromFile() {\r\n\r\n        if(baseSalariedFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(baseSalariedFile));\r\n                baseSalariedArrayList = (ArrayList<BaseSalariedEmployee>) ois.readObject();\r\n                for (BaseSalariedEmployee emp : baseSalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerBaseSalariedArrayList.contains(emp)) {\r\n                        managerBaseSalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerBaseSalariedEmployeeObservableList = managerBaseSalaryTable.getItems();\r\n                managerBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerBaseSalariedArrayList);\r\n                managerBaseSalaryTable.setItems(managerBaseSalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no base Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void baseSalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(baseSalariedFile));\r\n            oos.writeObject(baseSalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in Base Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    // hourly salary read and write to file.\r\n    private void hourlySalaryReadFromFile(){\r\n\r\n        if(hourlySalaryFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(hourlySalaryFile));\r\n                hourlySalariedArrayList = (ArrayList<HourlySalariedEmployee>) ois.readObject();\r\n                for (HourlySalariedEmployee emp : hourlySalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerHourlySalariedArrayList.contains(emp)) {\r\n                        managerHourlySalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerHourlySalariedEmployeeObservableList = managerHourlySalaryTable.getItems();\r\n                managerHourlySalariedEmployeeObservableList = FXCollections.observableArrayList(managerHourlySalariedArrayList);\r\n                managerHourlySalaryTable.setItems(managerHourlySalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no hourly Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void hourlySalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(hourlySalaryFile));\r\n            oos.writeObject(hourlySalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in hourly Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    //Commission Salary read and write to file.\r\n\r\n    private void commissionSalaryReadFromFile(){\r\n\r\n        if(commissionSalaryFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(commissionSalaryFile));\r\n                commissionSalariedArrayList = (ArrayList<CommissionSalariedEmployee>) ois.readObject();\r\n                for (CommissionSalariedEmployee emp : commissionSalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerCommissionSalariedArrayList.contains(emp)) {\r\n                        managerCommissionSalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerCommissionSalariedEmployeeObservableList = managerCommissionSalaryTable.getItems();\r\n                managerCommissionSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionSalariedArrayList);\r\n                managerCommissionSalaryTable.setItems(managerCommissionSalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no commission Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void commissionSalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(commissionSalaryFile));\r\n            oos.writeObject(commissionSalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in commission Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    //Commission base salary read and write to file.\r\n    private void commissionBaseSalaryReadFromFile(){\r\n\r\n        if(commissionBaseSalaryFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(commissionBaseSalaryFile));\r\n                commissionBaseSalariedArrayList = (ArrayList<CommissionBaseSalariedEmployee>) ois.readObject();\r\n                for (CommissionBaseSalariedEmployee emp : commissionBaseSalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerCommissionBaseSalariedArrayList.contains(emp)) {\r\n                        managerCommissionBaseSalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerCommissionBaseSalariedEmployeeObservableList = managerCommissionBaseTable.getItems();\r\n                managerCommissionBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionBaseSalariedArrayList);\r\n                managerCommissionBaseTable.setItems(managerCommissionBaseSalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no Commission Base Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void commissionBaseSalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(commissionBaseSalaryFile));\r\n            oos.writeObject(commissionBaseSalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in Commission Base Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/myfinalproject/AddManagerSceneController.java b/src/main/java/org/example/myfinalproject/AddManagerSceneController.java
--- a/src/main/java/org/example/myfinalproject/AddManagerSceneController.java	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ b/src/main/java/org/example/myfinalproject/AddManagerSceneController.java	(date 1720617056000)
@@ -263,6 +263,12 @@
     @FXML
     private Button editButton;
 
+    @FXML
+    private Button addManagerButton;
+
+    @FXML
+    private Button deActiveButton;
+
     @FXML
     private RadioButton employeeRadioButton;
 
@@ -427,7 +433,7 @@
 
     @FXML
     void onEditButton(ActionEvent event) throws IOException {
-            statusCombo.setVisible(true);
+            statusCombo.setVisible(false);
             applyButton.setVisible(true);
             cancelButton.setVisible(true);
             employeeRadioButton.setVisible(true);
@@ -505,7 +511,6 @@
         employeeRadioButton.setVisible(false);
         managerRadioButton.setVisible(false);
 
-
             switch (managerPickTypeCombo.getValue()) {
                 case "base-salaried":
                     managerPickTypeCombo.setEditable(false);
@@ -571,7 +576,350 @@
 
     @FXML
     void onApplyButton(ActionEvent event) throws IOException {
-        // Define this button
+        if(managerRadioButton.isSelected()){
+
+            Employee emp = null;
+            if(managerHourlySalaryTable.getSelectionModel().getSelectedIndex() == -1){
+                  emp = managerBaseSalaryTable.getSelectionModel().getSelectedItem();
+            }
+            else if (managerCommissionBaseTable.getSelectionModel().getSelectedIndex() == -1) {
+                 emp = managerCommissionBaseTable.getSelectionModel().getSelectedItem();
+            }
+            else if(managerCommissionSalaryTable.getSelectionModel().getSelectedIndex() == -1){
+                emp = managerCommissionSalaryTable.getSelectionModel().getSelectedItem();
+            }
+            else if(managerHourlySalaryTable.getSelectionModel().getSelectedIndex() == -1){
+                emp = managerHourlySalaryTable.getSelectionModel().getSelectedItem();
+            }
+
+            var type = (String) managerPickTypeCombo.getSelectionModel().getSelectedItem();
+            boolean isDone = false;
+            try {
+                var department = (Department) DepartmentCombo.getSelectionModel().getSelectedItem();
+                switch (type) {
+                    case "base-salaried":
+                        if (!department.isHasManager()) {
+                            var baseSalariedEmp = new BaseSalariedEmployee(nameField.getText(),familyField.getText(),
+                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),
+                                    LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(baseSalaryField.getText()));
+                            departmentWriteToFile();
+                            baseSalariedArrayList.add(baseSalariedEmp);
+                            managerBaseSalariedArrayList.add(baseSalariedEmp);
+                            managerBaseSalariedEmployeeObservableList = managerBaseSalaryTable.getItems();
+                            managerBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerBaseSalariedArrayList);
+                            managerBaseSalaryTable.setItems(managerBaseSalariedEmployeeObservableList);
+                            baseSalaryWriteToFile();
+                            isDone = true;
+                            //reset value of text boxes.
+                            nameField.setText("");
+                            familyField.setText("");
+                            nationalIdField.setText("");
+                            phoneField.setText("");
+                            managerBonusField.setText("");
+                            birthDatePicker.setValue(null);
+                            baseSalaryField.setText("");
+                        } else {
+                            Alert alert = new Alert(Alert.AlertType.ERROR);
+                            alert.setTitle("ERROR!");
+                            alert.setContentText("This Department already has a manager");
+                            alert.showAndWait();
+                        }
+                        break;
+                    case "hourly-salaried":
+                        if (!department.isHasManager()) {
+                            var hourlySalariedEmp = new HourlySalariedEmployee(nameField.getText(),familyField.getText(),
+                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),
+                                    LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(PayPerHourField.getText())
+                                    ,Double.parseDouble(amountOfHoursField.getText()));
+                            departmentWriteToFile();
+                            hourlySalariedArrayList.add(hourlySalariedEmp);
+                            managerHourlySalariedArrayList.add(hourlySalariedEmp);
+                            managerHourlySalariedEmployeeObservableList = managerHourlySalaryTable.getItems();
+                            managerHourlySalariedEmployeeObservableList = FXCollections.observableArrayList(managerHourlySalariedArrayList);
+                            managerHourlySalaryTable.setItems(managerHourlySalariedEmployeeObservableList);
+                            hourlySalaryWriteToFile();
+                            isDone = true;
+                            //reset value of text boxes.
+                            nameField.setText("");
+                            familyField.setText("");
+                            nationalIdField.setText("");
+                            phoneField.setText("");
+                            managerBonusField.setText("");
+                            birthDatePicker.setValue(null);
+                            PayPerHourField.setText("");
+                            amountOfHoursField.setText("");
+                        } else{
+                            Alert alert = new Alert(Alert.AlertType.ERROR);
+                            alert.setTitle("ERROR!");
+                            alert.setContentText("This Department already has a manager");
+                            alert.showAndWait();
+                        }
+                        break;
+                    case "commission-salaried":
+                        if (!department.isHasManager()) {
+                            var commissionSalariedEmp = new CommissionSalariedEmployee(nameField.getText(),familyField.getText(),
+                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),
+                                    LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(commissionRateField.getText())
+                                    ,Integer.parseInt(numberOfSalesField.getText()));
+                            departmentWriteToFile();
+                            commissionSalariedArrayList.add(commissionSalariedEmp);
+                            managerCommissionSalariedArrayList.add(commissionSalariedEmp);
+                            managerCommissionSalariedEmployeeObservableList = managerCommissionSalaryTable.getItems();
+                            managerCommissionSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionSalariedArrayList);
+                            managerCommissionSalaryTable.setItems(managerCommissionSalariedEmployeeObservableList);
+                            commissionSalaryWriteToFile();
+                            isDone = true;
+                            //reset value of text boxes.
+                            nameField.setText("");
+                            familyField.setText("");
+                            nationalIdField.setText("");
+                            phoneField.setText("");
+                            managerBonusField.setText("");
+                            birthDatePicker.setValue(null);
+                            commissionRateField.setText("");
+                            numberOfSalesField.setText("");
+                        } else {
+                            Alert alert = new Alert(Alert.AlertType.ERROR);
+                            alert.setTitle("ERROR!");
+                            alert.setContentText("This Department already has a manager");
+                            alert.showAndWait();
+                        }
+                        break;
+                    case "base-commission salaried":
+                        if (!department.isHasManager()) {
+                            var commissionBaseSalariedEmp = new CommissionBaseSalariedEmployee(nameField.getText(),familyField.getText(),
+                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),
+                                    LocalDate.now(),birthDatePicker.getValue(), department,Double.parseDouble(baseSalaryField.getText())
+                                    , Double.parseDouble(commissionRateField2.getText())
+                                    ,Integer.parseInt(numberOfSalesField2.getText()));
+                            departmentWriteToFile();
+                            commissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);
+                            managerCommissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);
+                            managerCommissionBaseSalariedEmployeeObservableList = managerCommissionBaseTable.getItems();
+                            managerCommissionBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionBaseSalariedArrayList);
+                            managerCommissionBaseTable.setItems(managerCommissionBaseSalariedEmployeeObservableList);
+                            commissionBaseSalaryWriteToFile();
+                            isDone = true;
+                            //reset value of text boxes.
+                            nameField.setText("");
+                            familyField.setText("");
+                            nationalIdField.setText("");
+                            phoneField.setText("");
+                            managerBonusField.setText("");
+                            birthDatePicker.setValue(null);
+                            baseSalaryField.setText("");
+                            commissionRateField2.setText("");
+                            numberOfSalesField2.setText("");
+                        } else {
+                            Alert alert = new Alert(Alert.AlertType.ERROR);
+                            alert.setTitle("ERROR!");
+                            alert.setContentText("This Department already has a manager");
+                            alert.showAndWait();
+                        }
+                        break;
+                }
+            }
+            catch (Exception e) {
+                Alert alert = new Alert(Alert.AlertType.ERROR);
+                alert.setTitle("SELECTION ERROR!");
+                alert.setContentText("Select a Salary Type and a Department for the Employee ...");
+                alert.showAndWait();
+            }
+
+            if(isDone) {
+                int index = 0;
+                String departmentName;
+                if (emp instanceof BaseSalariedEmployee) {
+                    departmentName = emp.getDepartment().getName();
+
+                    for (Department department : departmentArrayList) {
+                        if (department.getName().equals(departmentName)) {
+                            index = departmentArrayList.indexOf(department);
+                        }
+                    }
+                    emp.setActive(false);
+                    emp.setEndDate(LocalDate.now().toString());
+                    emp.setStatus(Status.HAS_CHANGED);
+                    Department department = emp.getDepartment();
+                    department.setHasManager(false);
+                    department.setNumberOfActiveEmployees(department.getNumberOfActiveEmployees() - 1);
+                    departmentArrayList.set(index, department);
+                    baseSalaryWriteToFile();
+                    departmentWriteToFile();
+                    managerBaseSalaryTable.getItems().remove(emp);
+                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                    DepartmentCombo.setItems(departmentObservableList);
+
+                } else if (emp instanceof CommissionBaseSalariedEmployee) {
+                    departmentName = emp.getDepartment().getName();
+
+                    for (Department department1 : departmentArrayList) {
+                        if (department1.getName().equals(departmentName)) {
+                            index = departmentArrayList.indexOf(department1);
+                        }
+                    }
+                    emp.setActive(false);
+                    emp.setEndDate(LocalDate.now().toString());
+                    emp.setStatus(Status.HAS_CHANGED);
+                    Department department1 = emp.getDepartment();
+                    department1.setHasManager(false);
+                    department1.setNumberOfActiveEmployees(department1.getNumberOfActiveEmployees() - 1);
+                    departmentArrayList.set(index, department1);
+                    commissionBaseSalaryWriteToFile();
+                    departmentWriteToFile();
+                    managerCommissionBaseTable.getItems().remove(emp);
+                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                    DepartmentCombo.setItems(departmentObservableList);
+
+                } else if (emp instanceof HourlySalariedEmployee) {
+                    departmentName = emp.getDepartment().getName();
+
+                    for (Department department2 : departmentArrayList) {
+                        if (department2.getName().equals(departmentName)) {
+                            index = departmentArrayList.indexOf(department2);
+                        }
+                    }
+                    emp.setActive(false);
+                    emp.setEndDate(LocalDate.now().toString());
+                    emp.setStatus(Status.HAS_CHANGED);
+                    Department department2 = emp.getDepartment();
+                    department2.setHasManager(false);
+                    department2.setNumberOfActiveEmployees(department2.getNumberOfActiveEmployees() - 1);
+                    departmentArrayList.set(index, department2);
+                    hourlySalaryWriteToFile();
+                    departmentWriteToFile();
+                    managerHourlySalaryTable.getItems().remove(emp);
+                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                    DepartmentCombo.setItems(departmentObservableList);
+
+                } else if (emp instanceof CommissionSalariedEmployee) {
+                    departmentName = emp.getDepartment().getName();
+
+                    for (Department department3 : departmentArrayList) {
+                        if (department3.getName().equals(departmentName)) {
+                            index = departmentArrayList.indexOf(department3);
+                        }
+                    }
+                    emp.setActive(false);
+                    emp.setEndDate(LocalDate.now().toString());
+                    emp.setStatus(Status.HAS_CHANGED);
+                    Department department3 = emp.getDepartment();
+                    department3.setHasManager(false);
+                    department3.setNumberOfActiveEmployees(department3.getNumberOfActiveEmployees() - 1);
+                    departmentArrayList.set(index, department3);
+                    commissionSalaryWriteToFile();
+                    departmentWriteToFile();
+                    managerCommissionSalaryTable.getItems().remove(emp);
+                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                    DepartmentCombo.setItems(departmentObservableList);
+
+                }
+
+                statusCombo.setVisible(false);
+                applyButton2.setVisible(false);
+                cancelButton2.setVisible(false);
+                switch (managerPickTypeCombo.getValue()) {
+                    case "base-salaried":
+                        managerPickTypeCombo.setEditable(false);
+                        nameField.setEditable(true);
+                        familyField.setEditable(true);
+                        nationalIdField.setEditable(true);
+                        phoneField.setEditable(true);
+                        birthDatePicker.setEditable(false);
+                        birthDatePicker.setDisable(false);
+                        baseSalaryField.setEditable(true);
+                        managerBonusField.setEditable(true);
+                        DepartmentCombo.setDisable(false);
+
+                        nameField.setText("");
+                        familyField.setText("");
+                        nationalIdField.setText("");
+                        phoneField.setText("");
+                        managerBonusField.setText("");
+                        birthDatePicker.setValue(null);
+                        DepartmentCombo.setValue(null);
+                        baseSalaryField.setText("");
+
+                        break;
+
+                    case "base-commission salaried":
+                        managerPickTypeCombo.setEditable(false);
+                        nameField.setEditable(true);
+                        familyField.setEditable(true);
+                        nationalIdField.setEditable(true);
+                        phoneField.setEditable(true);
+                        birthDatePicker.setEditable(false);
+                        birthDatePicker.setDisable(false);
+                        numberOfSalesField2.setEditable(true);
+                        baseSalaryField.setEditable(true);
+                        commissionRateField2.setEditable(true);
+                        managerBonusField.setEditable(true);
+                        DepartmentCombo.setDisable(false);
+
+                        nameField.setText("");
+                        familyField.setText("");
+                        nationalIdField.setText("");
+                        phoneField.setText("");
+                        managerBonusField.setText("");
+                        birthDatePicker.setValue(null);
+                        DepartmentCombo.setValue(null);
+                        baseSalaryField.setText("");
+                        commissionRateField2.setText("");
+                        numberOfSalesField2.setText("");
+                        break;
+
+                    case "hourly-salaried":
+                        managerPickTypeCombo.setEditable(false);
+                        nameField.setEditable(true);
+                        familyField.setEditable(true);
+                        nationalIdField.setEditable(true);
+                        phoneField.setEditable(true);
+                        birthDatePicker.setEditable(false);
+                        birthDatePicker.setDisable(false);
+                        PayPerHourField.setEditable(true);
+                        amountOfHoursField.setEditable(true);
+                        managerBonusField.setEditable(true);
+                        DepartmentCombo.setDisable(false);
+
+                        nameField.setText("");
+                        familyField.setText("");
+                        nationalIdField.setText("");
+                        phoneField.setText("");
+                        managerBonusField.setText("");
+                        birthDatePicker.setValue(null);
+                        DepartmentCombo.setValue(null);
+                        PayPerHourField.setText("");
+                        amountOfHoursField.setText("");
+                        break;
+
+                    case "commission-salaried":
+                        managerPickTypeCombo.setEditable(false);
+                        nameField.setEditable(true);
+                        familyField.setEditable(true);
+                        nationalIdField.setEditable(true);
+                        phoneField.setEditable(true);
+                        birthDatePicker.setEditable(false);
+                        birthDatePicker.setDisable(false);
+                        numberOfSalesField.setEditable(true);
+                        commissionRateField.setEditable(true);
+                        managerBonusField.setEditable(true);
+                        DepartmentCombo.setDisable(false);
+
+                        nameField.setText("");
+                        familyField.setText("");
+                        nationalIdField.setText("");
+                        phoneField.setText("");
+                        managerBonusField.setText("");
+                        birthDatePicker.setValue(null);
+                        DepartmentCombo.setValue(null);
+                        baseSalaryField.setText("");
+                        commissionRateField.setText("");
+                        numberOfSalesField.setText("");
+                        break;
+                }
+            }
+
+        }
     }
 
     @FXML
@@ -581,7 +929,7 @@
         switch (managerPickTypeCombo.getValue()) {
             case "base-salaried":
                 BaseSalariedEmployee emp = managerBaseSalaryTable.getSelectionModel().getSelectedItem();
-                departmentName= emp.getDepartment().getName();
+                departmentName = emp.getDepartment().getName();
 
                 for( Department department : departmentArrayList){
                     if(department.getName().equals(departmentName)){
@@ -597,7 +945,9 @@
                 departmentArrayList.set(index,department);
                 baseSalaryWriteToFile();
                 departmentWriteToFile();
-                managerBaseSalaryTable.getItems().remove(emp);
+                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                DepartmentCombo.setItems(departmentObservableList);
+
                 break;
 
             case "base-commission salaried":
@@ -619,6 +969,8 @@
                 commissionBaseSalaryWriteToFile();
                 departmentWriteToFile();
                 managerCommissionBaseTable.getItems().remove(emp1);
+                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                DepartmentCombo.setItems(departmentObservableList);
                 break;
 
             case "hourly-salaried":
@@ -640,6 +992,8 @@
                 hourlySalaryWriteToFile();
                 departmentWriteToFile();
                 managerHourlySalaryTable.getItems().remove(emp2);
+                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                DepartmentCombo.setItems(departmentObservableList);
                 break;
 
             case "commission-salaried":
@@ -661,8 +1015,11 @@
                 commissionSalaryWriteToFile();
                 departmentWriteToFile();
                 managerCommissionSalaryTable.getItems().remove(emp3);
+                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);
+                DepartmentCombo.setItems(departmentObservableList);
                 break;
         }
+
         statusCombo.setVisible(false);
         applyButton2.setVisible(false);
         cancelButton2.setVisible(false);
@@ -830,7 +1187,9 @@
         managerBonusField.setEditable(false);
         DepartmentCombo.setEditable(false);
         DepartmentCombo.setDisable(true);
-
+        deActiveButton.setVisible(true);
+        editButton.setVisible(true);
+        addManagerButton.setDisable(true);
     }
 
     @FXML
@@ -866,7 +1225,9 @@
         commissionRateField2.setEditable(false);
         DepartmentCombo.setEditable(false);
         DepartmentCombo.setDisable(true);
-
+        deActiveButton.setVisible(true);
+        editButton.setVisible(true);
+        addManagerButton.setDisable(true);
     }
 
     @FXML
@@ -900,6 +1261,9 @@
         commissionRateField.setEditable(false);
         DepartmentCombo.setEditable(false);
         DepartmentCombo.setDisable(true);
+        deActiveButton.setVisible(true);
+        editButton.setVisible(true);
+        addManagerButton.setDisable(true);
     }
 
     @FXML
@@ -933,7 +1297,9 @@
         amountOfHoursField.setEditable(false);
         DepartmentCombo.setEditable(false);
         DepartmentCombo.setDisable(true);
-
+        deActiveButton.setVisible(true);
+        editButton.setVisible(true);
+        addManagerButton.setDisable(true);
     }
 
     @FXML
@@ -944,6 +1310,7 @@
             cancelButton.setVisible(false);
             employeeRadioButton.setVisible(false);
             managerRadioButton.setVisible(false);
+            addManagerButton.setDisable(false);
             switch (managerPickTypeCombo.getValue()) {
                 case "base-salaried":
                     managerPickTypeCombo.setEditable(false);
@@ -965,6 +1332,8 @@
                     birthDatePicker.setValue(null);
                     DepartmentCombo.setValue(null);
                     baseSalaryField.setText("");
+                    deActiveButton.setVisible(false);
+                    editButton.setVisible(false);
 
                     break;
 
@@ -992,6 +1361,8 @@
                     baseSalaryField.setText("");
                     commissionRateField2.setText("");
                     numberOfSalesField2.setText("");
+                    deActiveButton.setVisible(false);
+                    editButton.setVisible(false);
                     break;
 
                 case "hourly-salaried":
@@ -1016,6 +1387,8 @@
                     DepartmentCombo.setValue(null);
                     PayPerHourField.setText("");
                     amountOfHoursField.setText("");
+                    deActiveButton.setVisible(false);
+                    editButton.setVisible(false);
                     break;
 
                 case "commission-salaried":
@@ -1041,6 +1414,8 @@
                     baseSalaryField.setText("");
                     commissionRateField.setText("");
                     numberOfSalesField.setText("");
+                    deActiveButton.setVisible(false);
+                    editButton.setVisible(false);
                     break;
             }
         }
Index: .idea/.gitignore
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
deleted file mode 100644
--- a/.idea/.gitignore	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,3 +0,0 @@
-# Default ignored files
-/shelf/
-/workspace.xml
Index: HourlySalaried.txt
===================================================================
diff --git a/HourlySalaried.txt b/HourlySalaried.txt
deleted file mode 100644
--- a/HourlySalaried.txt	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,12 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr 1org.example.myfinalproject.HourlySalariedEmployee��vձrz D 
-amountOfHoursD earningD 
-payPerHourxr #org.example.myfinalproject.Employee�Ks��� 
-I IDZ isActiveZ 	isManagerD managerBonusL 	birthDatet Ljava/lang/String;L 
-departmentt 'Lorg/example/myfinalproject/Department;L endDateq ~ L 	firstNameq ~ L lastNameq ~ L 
-nationalIDq ~ L phoneNumberq ~ L 	startDateq ~ L statust #Lorg/example/myfinalproject/Status;xp    @Y      t 
-2019-09-11sr %org.example.myfinalproject.Department��S��Q Z 
-hasManagerI numberOfActiveEmployeesI numberOfEmployeesL dateq ~ L nameq ~ xp        t 
-2021-06-04t معدنt 
-2024-06-27t هاشمt 
-هاشمیt 32789478923t 093123766734t 
-2024-06-27~r !org.example.myfinalproject.Status          xr java.lang.Enum          xpt END_OF_CONTRACT@$      @i      @$      x
\ No newline at end of file
Index: CommissionSalaried.txt
===================================================================
diff --git a/CommissionSalaried.txt b/CommissionSalaried.txt
deleted file mode 100644
--- a/CommissionSalaried.txt	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,11 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr 5org.example.myfinalproject.CommissionSalariedEmployee�ٲ}��B� D commissionRateD earningI 
-numberOfSalesxr #org.example.myfinalproject.Employee�Ks��� 
-I IDZ isActiveZ 	isManagerD managerBonusL 	birthDatet Ljava/lang/String;L 
-departmentt 'Lorg/example/myfinalproject/Department;L endDateq ~ L 	firstNameq ~ L lastNameq ~ L 
-nationalIDq ~ L phoneNumberq ~ L 	startDateq ~ L statust #Lorg/example/myfinalproject/Status;xp    @Y      t 
-2020-06-05sr %org.example.myfinalproject.Department��S��Q Z 
-hasManagerI numberOfActiveEmployeesI numberOfEmployeesL dateq ~ L nameq ~ xp        t 
-2021-06-01t برقt 
-2024-06-27t حسنt بهتوییt 
-6763247623t 	889988903t 
-2024-06-27~r !org.example.myfinalproject.Status          xr java.lang.Enum          xpt FIRED?ə�����@�`        x
\ No newline at end of file
Index: CommissionBaseSalaried.txt
===================================================================
diff --git a/CommissionBaseSalaried.txt b/CommissionBaseSalaried.txt
deleted file mode 100644
--- a/CommissionBaseSalaried.txt	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,13 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr 9org.example.myfinalproject.CommissionBaseSalariedEmployee\��qc� D 
-baseSalaryD earningxr 5org.example.myfinalproject.CommissionSalariedEmployee�ٲ}��B� D commissionRateD earningI 
-numberOfSalesxr #org.example.myfinalproject.Employee�Ks��� 
-I IDZ isActiveZ 	isManagerD managerBonusL 	birthDatet Ljava/lang/String;L 
-departmentt 'Lorg/example/myfinalproject/Department;L endDateq ~ L 	firstNameq ~ L lastNameq ~ L 
-nationalIDq ~ L phoneNumberq ~ L 	startDateq ~ L statust #Lorg/example/myfinalproject/Status;xp    @I      t 
-2021-09-09sr %org.example.myfinalproject.Department��S��Q Z 
-hasManagerI numberOfActiveEmployeesI numberOfEmployeesL dateq ~ L nameq ~ xp        t 
-2021-06-04t معدنt 
-2024-06-27t علیt وطن دوستt 
-3214324324t 09125674523t 
-2024-06-27~r !org.example.myfinalproject.Status          xr java.lang.Enum          xpt RETIRED?ٙ�����@�P        
-@I      @�`     x
\ No newline at end of file
Index: Department.txt
===================================================================
diff --git a/Department.txt b/Department.txt
deleted file mode 100644
--- a/Department.txt	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,4 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr %org.example.myfinalproject.Department��S��Q Z 
-hasManagerI numberOfActiveEmployeesI numberOfEmployeesL datet Ljava/lang/String;L nameq ~ xp        t 
-2021-06-01t برقsq ~         t 
-2021-06-04t معدنx
\ No newline at end of file
Index: .idea/uiDesigner.xml
===================================================================
diff --git a/.idea/uiDesigner.xml b/.idea/uiDesigner.xml
deleted file mode 100644
--- a/.idea/uiDesigner.xml	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,124 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="Palette2">
-    <group name="Swing">
-      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
-      </item>
-      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
-        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
-        <initial-values>
-          <property name="text" value="Button" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="RadioButton" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="CheckBox" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
-        <initial-values>
-          <property name="text" value="Label" />
-        </initial-values>
-      </item>
-      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
-          <preferred-size width="150" height="-1" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
-          <preferred-size width="150" height="50" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
-          <preferred-size width="200" height="200" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
-      </item>
-      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
-      </item>
-      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
-          <preferred-size width="-1" height="20" />
-        </default-constraints>
-      </item>
-      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
-        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
-      </item>
-      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
-        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
-      </item>
-    </group>
-  </component>
-</project>
\ No newline at end of file
Index: BaseSalaried.txt
===================================================================
diff --git a/BaseSalaried.txt b/BaseSalaried.txt
deleted file mode 100644
--- a/BaseSalaried.txt	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ /dev/null	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
@@ -1,27 +0,0 @@
-�� sr java.util.ArrayListx����a� I sizexp   w   sr /org.example.myfinalproject.BaseSalariedEmployeeڡ,}&~�� D 
-baseSalaryD earningxr #org.example.myfinalproject.Employee�Ks��� 
-I IDZ isActiveZ 	isManagerD managerBonusL 	birthDatet Ljava/lang/String;L 
-departmentt 'Lorg/example/myfinalproject/Department;L endDateq ~ L 	firstNameq ~ L lastNameq ~ L 
-nationalIDq ~ L phoneNumberq ~ L 	startDateq ~ L statust #Lorg/example/myfinalproject/Status;xp    @Y      t 
-2020-06-05sr %org.example.myfinalproject.Department��S��Q Z 
-hasManagerI numberOfActiveEmployeesI numberOfEmployeesL dateq ~ L nameq ~ xp        t 
-2021-06-01t برقt 
-2024-06-26t 
-مهیارt همتیt 4323414t 09300423664t 
-2024-06-26p@Y      @i      sq ~     @i      t 
-2020-06-11sq ~ 	        t 
-2021-06-04t معدنt 
-2024-06-26t محسنt حسنیt 32473278t 	100371782t 
-2024-06-26~r !org.example.myfinalproject.Status          xr java.lang.Enum          xpt RETIRED@b�     @u�     sq ~     @i      t 
-2020-06-05sq ~ 	        t 
-2021-06-01t برقt 
-2024-06-27t 
-مهشیدt باباییt 
-4234234234t 	334324324t 
-2024-06-27~q ~ t FIRED@Y      @r�     sq ~     @b�     t 
-2018-10-12sq ~ 	        t 
-2021-06-01t برقt 
-2024-06-27t 
-احسانt 
-زمانیt 6673223t 	778978932t 
-2024-06-27q ~  @i      @u�     x
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_21\" default=\"true\" project-jdk-name=\"21\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ b/.idea/misc.xml	(date 1720619795884)
@@ -7,9 +7,6 @@
         <option value="$PROJECT_DIR$/pom.xml" />
       </list>
     </option>
-    <option name="workspaceImportForciblyTurnedOn" value="true" />
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK">
-    <output url="file://$PROJECT_DIR$/out" />
-  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_21" default="true" project-jdk-name="21" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: src/main/resources/org/example/myfinalproject/AddManagerScene.fxml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n\r\n<?import javafx.scene.control.Button?>\r\n<?import javafx.scene.control.ComboBox?>\r\n<?import javafx.scene.control.DatePicker?>\r\n<?import javafx.scene.control.RadioButton?>\r\n<?import javafx.scene.control.TableColumn?>\r\n<?import javafx.scene.control.TableView?>\r\n<?import javafx.scene.control.TextField?>\r\n<?import javafx.scene.layout.AnchorPane?>\r\n<?import javafx.scene.text.Font?>\r\n\r\n<AnchorPane maxHeight=\"-Infinity\" maxWidth=\"-Infinity\" minHeight=\"-Infinity\" minWidth=\"-Infinity\" onMouseClicked=\"#unlockFields\" prefHeight=\"600.0\" prefWidth=\"1000.0\" xmlns=\"http://javafx.com/javafx/21\" xmlns:fx=\"http://javafx.com/fxml/1\" fx:controller=\"org.example.myfinalproject.AddManagerSceneController\">\r\n   <children>\r\n      <TableView fx:id=\"managerBaseSalaryTable\" layoutX=\"7.0\" layoutY=\"2.0\" onMouseClicked=\"#managerBaseSalaryTableGetItem\" prefHeight=\"421.0\" prefWidth=\"994.0\" AnchorPane.bottomAnchor=\"177.0\" AnchorPane.leftAnchor=\"3.0\" AnchorPane.rightAnchor=\"3.0\" AnchorPane.topAnchor=\"2.0\">\r\n        <columns>\r\n          <TableColumn fx:id=\"managerBaseSalaryIdColumn\" prefWidth=\"43.200013637542725\" text=\"ID\" />\r\n          <TableColumn fx:id=\"managerBaseSalaryNameColumn\" prefWidth=\"72.80001831054688\" text=\"Name\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryFamilyColumn\" prefWidth=\"107.0\" text=\"Family Name\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryNationalColumn\" prefWidth=\"104.0\" text=\"National-ID\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryPhoneColumn\" prefWidth=\"112.0\" text=\"Phone\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryBirthColumn\" minWidth=\"8.0\" prefWidth=\"104.0\" text=\"Birth Date\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryDepartmentColumn\" prefWidth=\"109.0\" text=\"Department\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryBonusColumn\" prefWidth=\"113.0\" text=\"Manager Bonus\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryColumn\" prefWidth=\"103.0\" text=\"Base\" />\r\n            <TableColumn fx:id=\"managerBaseSalaryEarningColumn\" prefWidth=\"130.0\" text=\"Total Earning\" />\r\n        </columns>\r\n      </TableView>\r\n      <TextField fx:id=\"managerBonusField\" layoutX=\"340.0\" layoutY=\"507.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter manager bonus\" />\r\n      <TextField fx:id=\"nameField\" layoutX=\"13.0\" layoutY=\"507.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter name\" />\r\n      <TextField fx:id=\"familyField\" layoutX=\"13.0\" layoutY=\"550.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter family name\" />\r\n      <TextField fx:id=\"nationalIdField\" layoutX=\"340.0\" layoutY=\"461.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter national-ID\" />\r\n      <TextField fx:id=\"phoneField\" layoutX=\"160.0\" layoutY=\"461.0\" prefHeight=\"26.0\" prefWidth=\"158.0\" promptText=\"Enter phone number\" />\r\n      <ComboBox fx:id=\"managerPickTypeCombo\" layoutX=\"13.0\" layoutY=\"461.0\" onAction=\"#onManagerPickTypeCombo\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Pick a type\" />\r\n      <ComboBox fx:id=\"DepartmentCombo\" layoutX=\"160.0\" layoutY=\"550.0\" prefHeight=\"26.0\" prefWidth=\"158.0\" promptText=\"Select a Department\" />\r\n      <TextField fx:id=\"baseSalaryField\" layoutX=\"340.0\" layoutY=\"551.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter base\" />\r\n      <DatePicker fx:id=\"birthDatePicker\" editable=\"false\" layoutX=\"160.0\" layoutY=\"507.0\" prefHeight=\"26.0\" prefWidth=\"158.0\" promptText=\"Select the birth date\" />\r\n      <Button layoutX=\"726.0\" layoutY=\"461.0\" mnemonicParsing=\"false\" onAction=\"#onAddManagerButton\" prefHeight=\"51.0\" prefWidth=\"270.0\" text=\"Add Manager\" textAlignment=\"CENTER\">\r\n         <font>\r\n            <Font name=\"System Bold\" size=\"18.0\" />\r\n         </font></Button>\r\n      <Button fx:id=\"backButton\" layoutX=\"933.0\" layoutY=\"555.0\" mnemonicParsing=\"false\" onAction=\"#onBackButton\" prefHeight=\"26.0\" prefWidth=\"64.0\" text=\"Back\" />\r\n      <TableView fx:id=\"managerHourlySalaryTable\" layoutX=\"3.0\" layoutY=\"6.0\" onMouseClicked=\"#managerHourlySalaryTableGetItem\" prefHeight=\"445.0\" prefWidth=\"994.0\" visible=\"false\" AnchorPane.bottomAnchor=\"177.0\" AnchorPane.leftAnchor=\"3.0\" AnchorPane.rightAnchor=\"3.0\" AnchorPane.topAnchor=\"6.0\">\r\n        <columns>\r\n          <TableColumn fx:id=\"managerHourlySalaryIdColumn\" prefWidth=\"44.0\" text=\"ID\" />\r\n          <TableColumn fx:id=\"managerHourlySalaryNameColumn\" prefWidth=\"58.0\" text=\"Name\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryFamilyColumn\" prefWidth=\"90.0\" text=\"Family Name\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryNationalColumn\" prefWidth=\"92.0\" text=\"National-ID\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryPhoneColumn\" prefWidth=\"111.0\" text=\"Phone\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryBirthColumn\" prefWidth=\"92.0\" text=\"Birth Date\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryDepartmentColumn\" prefWidth=\"85.0\" text=\"Department\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryBonusColumn\" prefWidth=\"114.0\" text=\"Manager Bonus\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryPayColumn\" prefWidth=\"91.0\" text=\"Hourly Rate\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryAmountOfHoursColumn\" minWidth=\"0.0\" prefWidth=\"115.0\" text=\"Amount of Hours\" />\r\n            <TableColumn fx:id=\"managerHourlySalaryEarningColumn\" minWidth=\"8.0\" prefWidth=\"107.0\" text=\"Total Earning\" />\r\n        </columns>\r\n      </TableView>\r\n      <TextField fx:id=\"PayPerHourField\" layoutX=\"340.0\" layoutY=\"551.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter hourly rate\" visible=\"false\" />\r\n      <TextField fx:id=\"amountOfHoursField\" layoutX=\"487.0\" layoutY=\"461.0\" prefHeight=\"26.0\" prefWidth=\"147.0\" promptText=\"Enter amount of hours\" visible=\"false\" />\r\n      <TableView fx:id=\"managerCommissionSalaryTable\" layoutX=\"13.0\" layoutY=\"16.0\" onMouseClicked=\"#managerCommissionSalaryTableGetItem\" prefHeight=\"445.0\" prefWidth=\"994.0\" visible=\"false\" AnchorPane.bottomAnchor=\"177.0\" AnchorPane.leftAnchor=\"3.0\" AnchorPane.rightAnchor=\"3.0\" AnchorPane.topAnchor=\"6.0\">\r\n         <columns>\r\n            <TableColumn fx:id=\"managerCommissionSalaryIdColumn\" prefWidth=\"38.39999455213547\" text=\"ID\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryNameColumn\" prefWidth=\"56.0\" text=\"Name\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryFamilyColumn\" prefWidth=\"81.0\" text=\"Family Name\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryNationalColumn\" prefWidth=\"89.0\" text=\"National-ID\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryPhoneColumn\" prefWidth=\"93.0\" text=\"Phone\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryBirthColumn\" prefWidth=\"99.0\" text=\"Birth Date\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryDepartmentColumn\" prefWidth=\"98.0\" text=\"Department\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryBonusColumn\" prefWidth=\"112.0\" text=\"Manager Bonus\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryRateColumn\" prefWidth=\"115.0\" text=\"Commission Rate\" />\r\n            <TableColumn fx:id=\"managerCommissionSalarySalesColumn\" prefWidth=\"111.0\" text=\"Number of Sales\" />\r\n            <TableColumn fx:id=\"managerCommissionSalaryEarningColumn\" prefWidth=\"106.0\" text=\"Total Earning\" />\r\n         </columns>\r\n      </TableView>\r\n      <TextField fx:id=\"commissionRateField\" layoutX=\"487.0\" layoutY=\"461.0\" prefHeight=\"26.0\" prefWidth=\"147.0\" promptText=\"Enter commission rate\" visible=\"false\" />\r\n      <TextField fx:id=\"numberOfSalesField\" layoutX=\"340.0\" layoutY=\"551.0\" prefHeight=\"26.0\" prefWidth=\"130.0\" promptText=\"Enter number of sales\" visible=\"false\" />\r\n      <TableView fx:id=\"managerCommissionBaseTable\" layoutX=\"13.0\" layoutY=\"16.0\" onMouseClicked=\"#managerCommissionBaseSalaryTableGetItem\" prefHeight=\"445.0\" prefWidth=\"994.0\" visible=\"false\" AnchorPane.bottomAnchor=\"177.0\" AnchorPane.leftAnchor=\"3.0\" AnchorPane.rightAnchor=\"3.0\" AnchorPane.topAnchor=\"6.0\">\r\n         <columns>\r\n            <TableColumn fx:id=\"managerCommissionBaseIdColumn\" prefWidth=\"43.200013637542725\" text=\"ID\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseNameColumn\" prefWidth=\"53.0\" text=\"Name\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseFamilyColumn\" prefWidth=\"81.0\" text=\"Family Name\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseNationalColumn\" prefWidth=\"84.0\" text=\"National-ID\" />\r\n            <TableColumn fx:id=\"managerCommissionBasePhoneColumn\" prefWidth=\"75.0\" text=\"Phone\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseBirthColumn\" minWidth=\"8.0\" prefWidth=\"89.0\" text=\"Birth Date\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseDepartmentColumn\" prefWidth=\"94.0\" text=\"Department\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseBonusColumn\" prefWidth=\"101.0\" text=\"Manager Bonus\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseSalaryColumn\" minWidth=\"4.80010986328125\" prefWidth=\"56.0\" text=\"Base\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseRateColumn\" minWidth=\"0.0\" prefWidth=\"111.0\" text=\"Commission Rate\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseNumberOfSalesColumn\" prefWidth=\"102.0\" text=\"Number of Sales\" />\r\n            <TableColumn fx:id=\"managerCommissionBaseEarningColumn\" prefWidth=\"114.0\" text=\"Total Earning\" />\r\n         </columns>\r\n      </TableView>\r\n      <TextField fx:id=\"commissionRateField2\" layoutX=\"487.0\" layoutY=\"507.0\" prefHeight=\"26.0\" prefWidth=\"147.0\" promptText=\"Enter commission rate\" visible=\"false\" />\r\n      <TextField fx:id=\"numberOfSalesField2\" layoutX=\"487.0\" layoutY=\"461.0\" prefHeight=\"26.0\" prefWidth=\"147.0\" promptText=\"Enter number of sales\" visible=\"false\" />\r\n      <Button fx:id=\"editButton\" layoutX=\"858.0\" layoutY=\"556.0\" mnemonicParsing=\"false\" onAction=\"#onEditButton\" prefHeight=\"25.0\" prefWidth=\"64.0\" text=\"Edit\" />\r\n      <Button fx:id=\"cancelButton\" layoutX=\"787.0\" layoutY=\"555.0\" mnemonicParsing=\"false\" onAction=\"#onCancelButton\" prefHeight=\"25.0\" prefWidth=\"64.0\" text=\"Cancel\" visible=\"false\" />\r\n      <Button fx:id=\"applyButton\" layoutX=\"712.0\" layoutY=\"554.0\" mnemonicParsing=\"false\" onAction=\"#onApplyButton\" prefHeight=\"25.0\" prefWidth=\"64.0\" text=\"Apply\" visible=\"false\" />\r\n      <RadioButton fx:id=\"managerRadioButton\" layoutX=\"13.0\" layoutY=\"433.0\" mnemonicParsing=\"false\" onAction=\"#onManagerRadio\" text=\"Manager\" visible=\"false\" />\r\n      <RadioButton fx:id=\"employeeRadioButton\" layoutX=\"95.0\" layoutY=\"433.0\" mnemonicParsing=\"false\" onAction=\"#onEmployeeRadio\" text=\"Employee\" visible=\"false\" />\r\n      <ComboBox fx:id=\"statusCombo\" layoutX=\"485.0\" layoutY=\"550.0\" prefWidth=\"150.0\" promptText=\"End Reason\" visible=\"false\" />\r\n      <Button layoutX=\"859.0\" layoutY=\"521.0\" mnemonicParsing=\"false\" onAction=\"#onDeActiveButton\" prefHeight=\"26.0\" prefWidth=\"138.0\" text=\"Deactivate\" />\r\n      <Button fx:id=\"applyButton2\" layoutX=\"712.0\" layoutY=\"555.0\" mnemonicParsing=\"false\" onAction=\"#onApplyButton2\" prefHeight=\"26.0\" prefWidth=\"64.0\" text=\"Apply\" visible=\"false\" />\r\n      <Button fx:id=\"cancelButton2\" layoutX=\"787.0\" layoutY=\"556.0\" mnemonicParsing=\"false\" onAction=\"#onCancelButton2\" prefHeight=\"25.0\" prefWidth=\"64.0\" text=\"Cancel\" visible=\"false\" />\r\n   </children>\r\n</AnchorPane>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/resources/org/example/myfinalproject/AddManagerScene.fxml b/src/main/resources/org/example/myfinalproject/AddManagerScene.fxml
--- a/src/main/resources/org/example/myfinalproject/AddManagerScene.fxml	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ b/src/main/resources/org/example/myfinalproject/AddManagerScene.fxml	(date 1720598816000)
@@ -35,7 +35,7 @@
       <ComboBox fx:id="DepartmentCombo" layoutX="160.0" layoutY="550.0" prefHeight="26.0" prefWidth="158.0" promptText="Select a Department" />
       <TextField fx:id="baseSalaryField" layoutX="340.0" layoutY="551.0" prefHeight="26.0" prefWidth="130.0" promptText="Enter base" />
       <DatePicker fx:id="birthDatePicker" editable="false" layoutX="160.0" layoutY="507.0" prefHeight="26.0" prefWidth="158.0" promptText="Select the birth date" />
-      <Button layoutX="726.0" layoutY="461.0" mnemonicParsing="false" onAction="#onAddManagerButton" prefHeight="51.0" prefWidth="270.0" text="Add Manager" textAlignment="CENTER">
+      <Button fx:id="addManagerButton" layoutX="726.0" layoutY="461.0" mnemonicParsing="false" onAction="#onAddManagerButton" prefHeight="51.0" prefWidth="270.0" text="Add Manager" textAlignment="CENTER">
          <font>
             <Font name="System Bold" size="18.0" />
          </font></Button>
@@ -92,13 +92,13 @@
       </TableView>
       <TextField fx:id="commissionRateField2" layoutX="487.0" layoutY="507.0" prefHeight="26.0" prefWidth="147.0" promptText="Enter commission rate" visible="false" />
       <TextField fx:id="numberOfSalesField2" layoutX="487.0" layoutY="461.0" prefHeight="26.0" prefWidth="147.0" promptText="Enter number of sales" visible="false" />
-      <Button fx:id="editButton" layoutX="858.0" layoutY="556.0" mnemonicParsing="false" onAction="#onEditButton" prefHeight="25.0" prefWidth="64.0" text="Edit" />
+      <Button fx:id="editButton" layoutX="858.0" layoutY="556.0" mnemonicParsing="false" onAction="#onEditButton" prefHeight="25.0" prefWidth="64.0" text="Edit" visible="false" />
       <Button fx:id="cancelButton" layoutX="787.0" layoutY="555.0" mnemonicParsing="false" onAction="#onCancelButton" prefHeight="25.0" prefWidth="64.0" text="Cancel" visible="false" />
       <Button fx:id="applyButton" layoutX="712.0" layoutY="554.0" mnemonicParsing="false" onAction="#onApplyButton" prefHeight="25.0" prefWidth="64.0" text="Apply" visible="false" />
       <RadioButton fx:id="managerRadioButton" layoutX="13.0" layoutY="433.0" mnemonicParsing="false" onAction="#onManagerRadio" text="Manager" visible="false" />
       <RadioButton fx:id="employeeRadioButton" layoutX="95.0" layoutY="433.0" mnemonicParsing="false" onAction="#onEmployeeRadio" text="Employee" visible="false" />
       <ComboBox fx:id="statusCombo" layoutX="485.0" layoutY="550.0" prefWidth="150.0" promptText="End Reason" visible="false" />
-      <Button layoutX="859.0" layoutY="521.0" mnemonicParsing="false" onAction="#onDeActiveButton" prefHeight="26.0" prefWidth="138.0" text="Deactivate" />
+      <Button fx:id="deActiveButton" layoutX="859.0" layoutY="521.0" mnemonicParsing="false" onAction="#onDeActiveButton" prefHeight="26.0" prefWidth="138.0" text="Deactivate" visible="false" />
       <Button fx:id="applyButton2" layoutX="712.0" layoutY="555.0" mnemonicParsing="false" onAction="#onApplyButton2" prefHeight="26.0" prefWidth="64.0" text="Apply" visible="false" />
       <Button fx:id="cancelButton2" layoutX="787.0" layoutY="556.0" mnemonicParsing="false" onAction="#onCancelButton2" prefHeight="25.0" prefWidth="64.0" text="Cancel" visible="false" />
    </children>
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"VcsDirectoryMappings\">\r\n    <mapping directory=\"$PROJECT_DIR$\" vcs=\"Git\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
--- a/.idea/vcs.xml	(revision 19a0fbf268cb4dbe2344129fb9d1fe21fd9f0f1b)
+++ b/.idea/vcs.xml	(date 1720619795941)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="VcsDirectoryMappings">
-    <mapping directory="$PROJECT_DIR$" vcs="Git" />
+    <mapping directory="" vcs="Git" />
   </component>
 </project>
\ No newline at end of file
