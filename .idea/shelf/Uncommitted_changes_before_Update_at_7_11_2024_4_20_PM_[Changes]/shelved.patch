Index: src/main/java/org/example/myfinalproject/AddManagerSceneController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.myfinalproject;\r\n\r\nimport javafx.collections.FXCollections;\r\nimport javafx.collections.ObservableList;\r\nimport javafx.event.ActionEvent;\r\nimport javafx.fxml.FXML;\r\nimport javafx.fxml.FXMLLoader;\r\nimport javafx.fxml.Initializable;\r\nimport javafx.scene.Node;\r\nimport javafx.scene.Scene;\r\nimport javafx.scene.control.*;\r\nimport javafx.scene.control.cell.PropertyValueFactory;\r\nimport javafx.scene.input.MouseButton;\r\nimport javafx.scene.input.MouseEvent;\r\nimport javafx.stage.Stage;\r\n\r\nimport java.io.*;\r\nimport java.net.URL;\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.ResourceBundle;\r\n\r\npublic class AddManagerSceneController implements Initializable {\r\n    //Department variables.\r\n    File departmentFile = new File(\"Department.txt\");\r\n    ObservableList<Department> departmentObservableList;\r\n    ArrayList<Department> departmentArrayList = new ArrayList<>();\r\n\r\n    // Status combobox\r\n    ObservableList<Status> statusObservableList;\r\n    ArrayList<Status> statusArrayList = new ArrayList<>();\r\n\r\n    // manager base salary variables.\r\n    @FXML\r\n    private TableView<BaseSalariedEmployee> managerBaseSalaryTable;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Double> managerBaseSalaryBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Double> managerBaseSalaryColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Department> managerBaseSalaryDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Double> managerBaseSalaryEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,Integer> managerBaseSalaryIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<BaseSalariedEmployee,String> managerBaseSalaryPhoneColumn;\r\n\r\n    File baseSalariedFile = new File(\"BaseSalaried.txt\");\r\n    ObservableList<BaseSalariedEmployee> managerBaseSalariedEmployeeObservableList;\r\n    ArrayList<BaseSalariedEmployee> baseSalariedArrayList = new ArrayList<>();\r\n    ArrayList<BaseSalariedEmployee> managerBaseSalariedArrayList = new ArrayList<>();\r\n\r\n    //manager hourly salaried variables.\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryAmountOfHoursColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Department> managerHourlySalaryDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Integer> managerHourlySalaryIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, Double> managerHourlySalaryPayColumn;\r\n\r\n    @FXML\r\n    private TableColumn<HourlySalariedEmployee, String> managerHourlySalaryPhoneColumn;\r\n\r\n    @FXML\r\n    private TableView<HourlySalariedEmployee> managerHourlySalaryTable;\r\n\r\n    File hourlySalaryFile = new File(\"HourlySalaried.txt\");\r\n    ObservableList<HourlySalariedEmployee> managerHourlySalariedEmployeeObservableList;\r\n    ArrayList<HourlySalariedEmployee> hourlySalariedArrayList = new ArrayList<>();\r\n    ArrayList<HourlySalariedEmployee> managerHourlySalariedArrayList = new ArrayList<>();\r\n\r\n    //manager commission salaried variables.\r\n    @FXML\r\n    private TableView<CommissionSalariedEmployee> managerCommissionSalaryTable;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Double> managerCommissionSalaryBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Department> managerCommissionSalaryDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Double> managerCommissionSalaryEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Integer> managerCommissionSalaryIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,String> managerCommissionSalaryPhoneColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Double> managerCommissionSalaryRateColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionSalariedEmployee,Integer> managerCommissionSalarySalesColumn;\r\n\r\n    File commissionSalaryFile = new File(\"CommissionSalaried.txt\");\r\n    ObservableList<CommissionSalariedEmployee> managerCommissionSalariedEmployeeObservableList;\r\n    ArrayList<CommissionSalariedEmployee> commissionSalariedArrayList = new ArrayList<>();\r\n    ArrayList<CommissionSalariedEmployee> managerCommissionSalariedArrayList = new ArrayList<>();\r\n\r\n    //manager commission base salaried variables.\r\n    @FXML\r\n    private TableView<CommissionBaseSalariedEmployee> managerCommissionBaseTable;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseBirthColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Double> managerCommissionBaseBonusColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Department> managerCommissionBaseDepartmentColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Double> managerCommissionBaseEarningColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseFamilyColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,Integer> managerCommissionBaseIdColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseNameColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee,String> managerCommissionBaseNationalColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, Integer> managerCommissionBaseNumberOfSalesColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, String> managerCommissionBasePhoneColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, Double> managerCommissionBaseRateColumn;\r\n\r\n    @FXML\r\n    private TableColumn<CommissionBaseSalariedEmployee, Double> managerCommissionBaseSalaryColumn;\r\n\r\n    File commissionBaseSalaryFile = new File(\"CommissionBaseSalaried.txt\");\r\n    ObservableList<CommissionBaseSalariedEmployee> managerCommissionBaseSalariedEmployeeObservableList;\r\n    ArrayList<CommissionBaseSalariedEmployee> commissionBaseSalariedArrayList = new ArrayList<>();\r\n    ArrayList<CommissionBaseSalariedEmployee> managerCommissionBaseSalariedArrayList = new ArrayList<>();\r\n\r\n    //constant textFields in add manager Scene.\r\n\r\n    @FXML\r\n    private TextField nameField;\r\n\r\n    @FXML\r\n    private TextField familyField;\r\n\r\n    @FXML\r\n    private TextField nationalIdField;\r\n\r\n    @FXML\r\n    private TextField phoneField;\r\n\r\n    @FXML\r\n    private TextField baseSalaryField;\r\n\r\n    @FXML\r\n    private TextField managerBonusField;\r\n\r\n    @FXML\r\n    private DatePicker birthDatePicker;\r\n\r\n    @FXML\r\n    private ComboBox<Department> DepartmentCombo;\r\n\r\n    @FXML\r\n    private ComboBox<Status> statusCombo;\r\n\r\n    @FXML\r\n    private TextField PayPerHourField;\r\n\r\n    @FXML\r\n    private TextField amountOfHoursField;\r\n\r\n    @FXML\r\n    private TextField commissionRateField;\r\n\r\n    @FXML\r\n    private TextField numberOfSalesField;\r\n\r\n    @FXML\r\n    private TextField commissionRateField2;\r\n\r\n    @FXML\r\n    private TextField numberOfSalesField2;\r\n\r\n    @FXML\r\n    private ComboBox<String> managerPickTypeCombo;\r\n\r\n    @FXML\r\n    private Button applyButton;\r\n\r\n    @FXML\r\n    private Button applyButton2;\r\n\r\n    @FXML\r\n    private Button cancelButton;\r\n\r\n    @FXML\r\n    private Button cancelButton2;\r\n\r\n    @FXML\r\n    private Button editButton;\r\n\r\n    @FXML\r\n    private Button addManagerButton;\r\n\r\n    @FXML\r\n    private Button deActiveButton;\r\n\r\n    @FXML\r\n    private RadioButton employeeRadioButton;\r\n\r\n    @FXML\r\n    private RadioButton managerRadioButton;\r\n\r\n    ObservableList<String> typeOfEmployee = FXCollections.observableArrayList(\"base-salaried\",\"hourly-salaried\",\r\n            \"commission-salaried\",\"base-commission salaried\");\r\n\r\n\r\n\r\n    @FXML\r\n    void onAddManagerButton(ActionEvent event) {\r\n        var type = (String) managerPickTypeCombo.getSelectionModel().getSelectedItem();\r\n\r\n        try {\r\n            var department = (Department) DepartmentCombo.getSelectionModel().getSelectedItem();\r\n            switch (type) {\r\n                case \"base-salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var baseSalariedEmp = new BaseSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(baseSalaryField.getText()));\r\n                        departmentWriteToFile();\r\n                        baseSalariedArrayList.add(baseSalariedEmp);\r\n                        managerBaseSalariedArrayList.add(baseSalariedEmp);\r\n                        managerBaseSalariedEmployeeObservableList = managerBaseSalaryTable.getItems();\r\n                        managerBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerBaseSalariedArrayList);\r\n                        managerBaseSalaryTable.setItems(managerBaseSalariedEmployeeObservableList);\r\n                        baseSalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n                case \"hourly-salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var hourlySalariedEmp = new HourlySalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(PayPerHourField.getText())\r\n                                ,Double.parseDouble(amountOfHoursField.getText()));\r\n                        departmentWriteToFile();\r\n                        hourlySalariedArrayList.add(hourlySalariedEmp);\r\n                        managerHourlySalariedArrayList.add(hourlySalariedEmp);\r\n                        managerHourlySalariedEmployeeObservableList = managerHourlySalaryTable.getItems();\r\n                        managerHourlySalariedEmployeeObservableList = FXCollections.observableArrayList(managerHourlySalariedArrayList);\r\n                        managerHourlySalaryTable.setItems(managerHourlySalariedEmployeeObservableList);\r\n                        hourlySalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        PayPerHourField.setText(\"\");\r\n                        amountOfHoursField.setText(\"\");\r\n                    } else{\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n                case \"commission-salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var commissionSalariedEmp = new CommissionSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(commissionRateField.getText())\r\n                                ,Integer.parseInt(numberOfSalesField.getText()));\r\n                        departmentWriteToFile();\r\n                        commissionSalariedArrayList.add(commissionSalariedEmp);\r\n                        managerCommissionSalariedArrayList.add(commissionSalariedEmp);\r\n                        managerCommissionSalariedEmployeeObservableList = managerCommissionSalaryTable.getItems();\r\n                        managerCommissionSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionSalariedArrayList);\r\n                        managerCommissionSalaryTable.setItems(managerCommissionSalariedEmployeeObservableList);\r\n                        commissionSalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        commissionRateField.setText(\"\");\r\n                        numberOfSalesField.setText(\"\");\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n                case \"base-commission salaried\":\r\n                    if (!department.isHasManager()) {\r\n                        var commissionBaseSalariedEmp = new CommissionBaseSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                LocalDate.now(),birthDatePicker.getValue(), department,Double.parseDouble(baseSalaryField.getText())\r\n                                , Double.parseDouble(commissionRateField2.getText())\r\n                                ,Integer.parseInt(numberOfSalesField2.getText()));\r\n                        departmentWriteToFile();\r\n                        commissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);\r\n                        managerCommissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);\r\n                        managerCommissionBaseSalariedEmployeeObservableList = managerCommissionBaseTable.getItems();\r\n                        managerCommissionBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionBaseSalariedArrayList);\r\n                        managerCommissionBaseTable.setItems(managerCommissionBaseSalariedEmployeeObservableList);\r\n                        commissionBaseSalaryWriteToFile();\r\n                        //reset value of text boxes.\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n                        commissionRateField2.setText(\"\");\r\n                        numberOfSalesField2.setText(\"\");\r\n                    } else {\r\n                        Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                        alert.setTitle(\"ERROR!\");\r\n                        alert.setContentText(\"This Department already has a manager\");\r\n                        alert.showAndWait();\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n        catch (Exception e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"SELECTION ERROR!\");\r\n            alert.setContentText(\"Select a Salary Type and a Department for the Employee ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onBackButton(ActionEvent event) throws IOException {\r\n        Alert alert = new Alert(Alert.AlertType.CONFIRMATION);\r\n        alert.setTitle(\"Confirmation\");\r\n        alert.setContentText(\"Are you sure you want to go back?\");\r\n        alert.showAndWait();\r\n        if(alert.getResult().equals(ButtonType.OK)){\r\n            Stage stage;\r\n            Scene scene;\r\n            FXMLLoader fxmlLoader = new FXMLLoader(getClass().getResource(\"MainScene.fxml\"));\r\n            stage = (Stage) ((Node) event.getSource()).getScene().getWindow();\r\n            scene = new Scene(fxmlLoader.load());\r\n            stage.setScene(scene);\r\n            stage.setResizable(false);\r\n            stage.centerOnScreen();\r\n            stage.show();\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onEditButton(ActionEvent event) throws IOException {\r\n            statusCombo.setVisible(false);\r\n            applyButton.setVisible(true);\r\n            cancelButton.setVisible(true);\r\n            employeeRadioButton.setVisible(true);\r\n            managerRadioButton.setVisible(true);\r\n            employeeRadioButton.setDisable(true);\r\n            managerRadioButton.setSelected(true);\r\n\r\n\r\n            switch (managerPickTypeCombo.getValue()) {\r\n                    case \"base-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        baseSalaryField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n\r\n                    case \"base-commission salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        numberOfSalesField2.setEditable(true);\r\n                        baseSalaryField.setEditable(true);\r\n                        commissionRateField2.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n\r\n                    case \"hourly-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        PayPerHourField.setEditable(true);\r\n                        amountOfHoursField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n\r\n                    case \"commission-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(false);\r\n                        familyField.setEditable(false);\r\n                        nationalIdField.setEditable(false);\r\n                        phoneField.setEditable(false);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(true);\r\n                        numberOfSalesField.setEditable(true);\r\n                        commissionRateField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setEditable(false);\r\n                        DepartmentCombo.setDisable(false);\r\n                        break;\r\n            }\r\n    }\r\n\r\n    @FXML\r\n    void onCancelButton(ActionEvent event) throws  IOException {\r\n        statusCombo.setVisible(false);\r\n        applyButton.setVisible(false);\r\n        cancelButton.setVisible(false);\r\n        employeeRadioButton.setVisible(false);\r\n        managerRadioButton.setVisible(false);\r\n\r\n            switch (managerPickTypeCombo.getValue()) {\r\n                case \"base-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    baseSalaryField.setEditable(false);\r\n                    managerBonusField.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n\r\n                case \"base-commission salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    baseSalaryField.setEditable(false);\r\n                    managerBonusField.setEditable(false);\r\n                    numberOfSalesField2.setEditable(false);\r\n                    commissionRateField2.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n\r\n                case \"hourly-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    managerBonusField.setEditable(false);\r\n                    PayPerHourField.setEditable(false);\r\n                    amountOfHoursField.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n\r\n                case \"commission-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(false);\r\n                    familyField.setEditable(false);\r\n                    nationalIdField.setEditable(false);\r\n                    phoneField.setEditable(false);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(true);\r\n                    managerBonusField.setEditable(false);\r\n                    numberOfSalesField.setEditable(false);\r\n                    commissionRateField.setEditable(false);\r\n                    DepartmentCombo.setEditable(false);\r\n                    DepartmentCombo.setDisable(true);\r\n                    break;\r\n            }\r\n    }\r\n\r\n    @FXML\r\n    void onApplyButton(ActionEvent event) throws IOException {\r\n        if (!managerRadioButton.isSelected() && !employeeRadioButton.isSelected()) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setHeaderText(\"Employee or Manager ?\");\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"You must select the new role of your selection.\");\r\n            alert.showAndWait();\r\n        }\r\n\r\n\r\n        if(managerRadioButton.isSelected()){\r\n            Employee emp = null;\r\n            if(managerHourlySalaryTable.getSelectionModel().getSelectedIndex() == -1){\r\n                emp = managerBaseSalaryTable.getSelectionModel().getSelectedItem();\r\n            }\r\n            else if (managerCommissionBaseTable.getSelectionModel().getSelectedIndex() == -1) {\r\n                emp = managerCommissionBaseTable.getSelectionModel().getSelectedItem();\r\n            }\r\n            else if(managerCommissionSalaryTable.getSelectionModel().getSelectedIndex() == -1){\r\n                emp = managerCommissionSalaryTable.getSelectionModel().getSelectedItem();\r\n            }\r\n            else if(managerHourlySalaryTable.getSelectionModel().getSelectedIndex() == -1){\r\n                emp = managerHourlySalaryTable.getSelectionModel().getSelectedItem();\r\n            }\r\n\r\n\r\n            var type = (String) managerPickTypeCombo.getSelectionModel().getSelectedItem();\r\n            boolean isAcceptable = false;\r\n\r\n            try {\r\n                var department = (Department) DepartmentCombo.getSelectionModel().getSelectedItem();\r\n\r\n                // This block of code is for creating another object with the new info\r\n                switch (type) {\r\n                    case \"base-salaried\":\r\n                        if (!department.isHasManager()) {\r\n                            var baseSalariedEmp = new BaseSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                    LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(baseSalaryField.getText()));\r\n                            departmentWriteToFile();\r\n                            baseSalariedArrayList.add(baseSalariedEmp);\r\n                            managerBaseSalariedArrayList.add(baseSalariedEmp);\r\n                            managerBaseSalariedEmployeeObservableList = managerBaseSalaryTable.getItems();\r\n                            managerBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerBaseSalariedArrayList);\r\n                            managerBaseSalaryTable.setItems(managerBaseSalariedEmployeeObservableList);\r\n                            baseSalaryWriteToFile();\r\n                            isAcceptable = true;\r\n                            //reset value of text boxes.\r\n                            nameField.setText(\"\");\r\n                            familyField.setText(\"\");\r\n                            nationalIdField.setText(\"\");\r\n                            phoneField.setText(\"\");\r\n                            managerBonusField.setText(\"\");\r\n                            birthDatePicker.setValue(null);\r\n                            baseSalaryField.setText(\"\");\r\n                        } else {\r\n                            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                            alert.setTitle(\"ERROR!\");\r\n                            alert.setContentText(\"This Department already has a manager\");\r\n                            alert.showAndWait();\r\n                        }\r\n                        break;\r\n\r\n                    case \"hourly-salaried\":\r\n                        if (!department.isHasManager()) {\r\n                            var hourlySalariedEmp = new HourlySalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                    LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(PayPerHourField.getText())\r\n                                    ,Double.parseDouble(amountOfHoursField.getText()));\r\n                            departmentWriteToFile();\r\n                            hourlySalariedArrayList.add(hourlySalariedEmp);\r\n                            managerHourlySalariedArrayList.add(hourlySalariedEmp);\r\n                            managerHourlySalariedEmployeeObservableList = managerHourlySalaryTable.getItems();\r\n                            managerHourlySalariedEmployeeObservableList = FXCollections.observableArrayList(managerHourlySalariedArrayList);\r\n                            managerHourlySalaryTable.setItems(managerHourlySalariedEmployeeObservableList);\r\n                            hourlySalaryWriteToFile();\r\n                            isAcceptable = true;\r\n                            //reset value of text boxes.\r\n                            nameField.setText(\"\");\r\n                            familyField.setText(\"\");\r\n                            nationalIdField.setText(\"\");\r\n                            phoneField.setText(\"\");\r\n                            managerBonusField.setText(\"\");\r\n                            birthDatePicker.setValue(null);\r\n                            PayPerHourField.setText(\"\");\r\n                            amountOfHoursField.setText(\"\");\r\n                        } else{\r\n                            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                            alert.setTitle(\"ERROR!\");\r\n                            alert.setContentText(\"This Department already has a manager\");\r\n                            alert.showAndWait();\r\n                        }\r\n                        break;\r\n\r\n                    case \"commission-salaried\":\r\n                        if (!department.isHasManager()) {\r\n                            var commissionSalariedEmp = new CommissionSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                    LocalDate.now(),birthDatePicker.getValue(), department, Double.parseDouble(commissionRateField.getText())\r\n                                    ,Integer.parseInt(numberOfSalesField.getText()));\r\n                            departmentWriteToFile();\r\n                            commissionSalariedArrayList.add(commissionSalariedEmp);\r\n                            managerCommissionSalariedArrayList.add(commissionSalariedEmp);\r\n                            managerCommissionSalariedEmployeeObservableList = managerCommissionSalaryTable.getItems();\r\n                            managerCommissionSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionSalariedArrayList);\r\n                            managerCommissionSalaryTable.setItems(managerCommissionSalariedEmployeeObservableList);\r\n                            commissionSalaryWriteToFile();\r\n                            isAcceptable = true;\r\n                            //reset value of text boxes.\r\n                            nameField.setText(\"\");\r\n                            familyField.setText(\"\");\r\n                            nationalIdField.setText(\"\");\r\n                            phoneField.setText(\"\");\r\n                            managerBonusField.setText(\"\");\r\n                            birthDatePicker.setValue(null);\r\n                            commissionRateField.setText(\"\");\r\n                            numberOfSalesField.setText(\"\");\r\n                        } else {\r\n                            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                            alert.setTitle(\"ERROR!\");\r\n                            alert.setContentText(\"This Department already has a manager\");\r\n                            alert.showAndWait();\r\n                        }\r\n                        break;\r\n\r\n                    case \"base-commission salaried\":\r\n                        if (!department.isHasManager()) {\r\n                            var commissionBaseSalariedEmp = new CommissionBaseSalariedEmployee(nameField.getText(),familyField.getText(),\r\n                                    nationalIdField.getText(), phoneField.getText(), Double.parseDouble(managerBonusField.getText()),\r\n                                    LocalDate.now(),birthDatePicker.getValue(), department,Double.parseDouble(baseSalaryField.getText())\r\n                                    , Double.parseDouble(commissionRateField2.getText())\r\n                                    ,Integer.parseInt(numberOfSalesField2.getText()));\r\n                            departmentWriteToFile();\r\n                            commissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);\r\n                            managerCommissionBaseSalariedArrayList.add(commissionBaseSalariedEmp);\r\n                            managerCommissionBaseSalariedEmployeeObservableList = managerCommissionBaseTable.getItems();\r\n                            managerCommissionBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionBaseSalariedArrayList);\r\n                            managerCommissionBaseTable.setItems(managerCommissionBaseSalariedEmployeeObservableList);\r\n                            commissionBaseSalaryWriteToFile();\r\n                            isAcceptable = true;\r\n                            //reset value of text boxes.\r\n                            nameField.setText(\"\");\r\n                            familyField.setText(\"\");\r\n                            nationalIdField.setText(\"\");\r\n                            phoneField.setText(\"\");\r\n                            managerBonusField.setText(\"\");\r\n                            birthDatePicker.setValue(null);\r\n                            baseSalaryField.setText(\"\");\r\n                            commissionRateField2.setText(\"\");\r\n                            numberOfSalesField2.setText(\"\");\r\n                        } else {\r\n                            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                            alert.setTitle(\"ERROR!\");\r\n                            alert.setContentText(\"This Department already has a manager\");\r\n                            alert.showAndWait();\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n            catch (Exception e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"SELECTION ERROR!\");\r\n                alert.setContentText(\"Select a Salary Type and a Department for the Employee ...\");\r\n                alert.showAndWait();\r\n            }\r\n\r\n            // This block of code is for archiving the previous info\r\n            if (isAcceptable) {\r\n                int index = 0;\r\n                String departmentName;\r\n                if (emp instanceof BaseSalariedEmployee) {\r\n                    departmentName = emp.getDepartment().getName();\r\n\r\n                    for (Department department : departmentArrayList) {\r\n                        if (department.getName().equals(departmentName)) {\r\n                            index = departmentArrayList.indexOf(department);\r\n                        }\r\n                    }\r\n\r\n                    emp.setActive(false);\r\n                    emp.setEndDate(LocalDate.now().toString());\r\n                    emp.setStatus(Status.HAS_CHANGED);\r\n                    Department department = emp.getDepartment();\r\n                    department.setHasManager(false);\r\n                    department.setNumberOfActiveEmployees(department.getNumberOfActiveEmployees() - 1);\r\n                    departmentArrayList.set(index, department);\r\n                    baseSalaryWriteToFile();\r\n                    departmentWriteToFile();\r\n                    managerBaseSalaryTable.getItems().remove(emp);\r\n                    managerBaseSalariedArrayList.remove(emp);\r\n                    baseSalariedArrayList.remove(emp);\r\n                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                    DepartmentCombo.setItems(departmentObservableList);\r\n\r\n                } else if (emp instanceof CommissionBaseSalariedEmployee) {\r\n                    departmentName = emp.getDepartment().getName();\r\n\r\n                    for (Department department1 : departmentArrayList) {\r\n                        if (department1.getName().equals(departmentName)) {\r\n                            index = departmentArrayList.indexOf(department1);\r\n                        }\r\n                    }\r\n                    emp.setActive(false);\r\n                    emp.setEndDate(LocalDate.now().toString());\r\n                    emp.setStatus(Status.HAS_CHANGED);\r\n                    Department department1 = emp.getDepartment();\r\n                    department1.setHasManager(false);\r\n                    department1.setNumberOfActiveEmployees(department1.getNumberOfActiveEmployees() - 1);\r\n                    departmentArrayList.set(index, department1);\r\n                    commissionBaseSalaryWriteToFile();\r\n                    departmentWriteToFile();\r\n                    managerCommissionBaseTable.getItems().remove(emp);\r\n                    managerCommissionBaseSalariedArrayList.remove(emp);\r\n                    commissionBaseSalariedArrayList.remove(emp);\r\n                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                    DepartmentCombo.setItems(departmentObservableList);\r\n\r\n                } else if (emp instanceof HourlySalariedEmployee) {\r\n                    departmentName = emp.getDepartment().getName();\r\n\r\n                    for (Department department2 : departmentArrayList) {\r\n                        if (department2.getName().equals(departmentName)) {\r\n                            index = departmentArrayList.indexOf(department2);\r\n                        }\r\n                    }\r\n                    emp.setActive(false);\r\n                    emp.setEndDate(LocalDate.now().toString());\r\n                    emp.setStatus(Status.HAS_CHANGED);\r\n                    Department department2 = emp.getDepartment();\r\n                    department2.setHasManager(false);\r\n                    department2.setNumberOfActiveEmployees(department2.getNumberOfActiveEmployees() - 1);\r\n                    departmentArrayList.set(index, department2);\r\n                    hourlySalaryWriteToFile();\r\n                    departmentWriteToFile();\r\n                    managerHourlySalaryTable.getItems().remove(emp);\r\n                    managerHourlySalariedArrayList.remove(emp);\r\n                    hourlySalariedArrayList.remove(emp);\r\n                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                    DepartmentCombo.setItems(departmentObservableList);\r\n\r\n                } else if (emp instanceof CommissionSalariedEmployee) {\r\n                    departmentName = emp.getDepartment().getName();\r\n\r\n                    for (Department department3 : departmentArrayList) {\r\n                        if (department3.getName().equals(departmentName)) {\r\n                            index = departmentArrayList.indexOf(department3);\r\n                        }\r\n                    }\r\n                    emp.setActive(false);\r\n                    emp.setEndDate(LocalDate.now().toString());\r\n                    emp.setStatus(Status.HAS_CHANGED);\r\n                    Department department3 = emp.getDepartment();\r\n                    department3.setHasManager(false);\r\n                    department3.setNumberOfActiveEmployees(department3.getNumberOfActiveEmployees() - 1);\r\n                    departmentArrayList.set(index, department3);\r\n                    commissionSalaryWriteToFile();\r\n                    departmentWriteToFile();\r\n                    managerCommissionSalaryTable.getItems().remove(emp);\r\n                    managerCommissionSalariedArrayList.remove(emp);\r\n                    commissionSalariedArrayList.remove(emp);\r\n                    departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                    DepartmentCombo.setItems(departmentObservableList);\r\n                }\r\n                addManagerButton.setDisable(false);\r\n                statusCombo.setVisible(false);\r\n                applyButton2.setVisible(false);\r\n                cancelButton2.setVisible(false);\r\n                switch (managerPickTypeCombo.getValue()) {\r\n                    case \"base-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(true);\r\n                        familyField.setEditable(true);\r\n                        nationalIdField.setEditable(true);\r\n                        phoneField.setEditable(true);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(false);\r\n                        baseSalaryField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setDisable(false);\r\n\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        DepartmentCombo.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n\r\n                        break;\r\n\r\n                    case \"base-commission salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(true);\r\n                        familyField.setEditable(true);\r\n                        nationalIdField.setEditable(true);\r\n                        phoneField.setEditable(true);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(false);\r\n                        numberOfSalesField2.setEditable(true);\r\n                        baseSalaryField.setEditable(true);\r\n                        commissionRateField2.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setDisable(false);\r\n\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        DepartmentCombo.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n                        commissionRateField2.setText(\"\");\r\n                        numberOfSalesField2.setText(\"\");\r\n                        break;\r\n\r\n                    case \"hourly-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(true);\r\n                        familyField.setEditable(true);\r\n                        nationalIdField.setEditable(true);\r\n                        phoneField.setEditable(true);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(false);\r\n                        PayPerHourField.setEditable(true);\r\n                        amountOfHoursField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setDisable(false);\r\n\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        DepartmentCombo.setValue(null);\r\n                        PayPerHourField.setText(\"\");\r\n                        amountOfHoursField.setText(\"\");\r\n                        break;\r\n\r\n                    case \"commission-salaried\":\r\n                        managerPickTypeCombo.setEditable(false);\r\n                        nameField.setEditable(true);\r\n                        familyField.setEditable(true);\r\n                        nationalIdField.setEditable(true);\r\n                        phoneField.setEditable(true);\r\n                        birthDatePicker.setEditable(false);\r\n                        birthDatePicker.setDisable(false);\r\n                        numberOfSalesField.setEditable(true);\r\n                        commissionRateField.setEditable(true);\r\n                        managerBonusField.setEditable(true);\r\n                        DepartmentCombo.setDisable(false);\r\n\r\n                        nameField.setText(\"\");\r\n                        familyField.setText(\"\");\r\n                        nationalIdField.setText(\"\");\r\n                        phoneField.setText(\"\");\r\n                        managerBonusField.setText(\"\");\r\n                        birthDatePicker.setValue(null);\r\n                        DepartmentCombo.setValue(null);\r\n                        baseSalaryField.setText(\"\");\r\n                        commissionRateField.setText(\"\");\r\n                        numberOfSalesField.setText(\"\");\r\n                        break;\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onApplyButton2(ActionEvent event) {\r\n        int index = 0;\r\n        String departmentName;\r\n        switch (managerPickTypeCombo.getValue()) {\r\n            case \"base-salaried\":\r\n                BaseSalariedEmployee emp = managerBaseSalaryTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp.getDepartment().getName();\r\n\r\n                for( Department department : departmentArrayList){\r\n                    if(department.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department);\r\n                    }\r\n                }\r\n                emp.setActive(false);\r\n                emp.setEndDate(LocalDate.now().toString());\r\n                emp.setStatus(statusCombo.getValue());\r\n                Department department = emp.getDepartment();\r\n                department.setHasManager(false);\r\n                department.setNumberOfActiveEmployees(department.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department);\r\n                baseSalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                DepartmentCombo.setItems(departmentObservableList);\r\n                managerBaseSalaryTable.getItems().remove(emp);\r\n                managerBaseSalariedArrayList.remove(emp);\r\n                baseSalariedArrayList.remove(emp);\r\n                break;\r\n\r\n            case \"base-commission salaried\":\r\n                CommissionBaseSalariedEmployee emp1 = managerCommissionBaseTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp1.getDepartment().getName();\r\n\r\n                for(Department department1 : departmentArrayList){\r\n                    if(department1.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department1);\r\n                    }\r\n                }\r\n\r\n                emp1.setActive(false);\r\n                emp1.setEndDate(LocalDate.now().toString());\r\n                emp1.setStatus(statusCombo.getValue());\r\n                Department department1 = emp1.getDepartment();\r\n                department1.setHasManager(false);\r\n                department1.setNumberOfActiveEmployees(department1.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department1);\r\n                commissionBaseSalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                DepartmentCombo.setItems(departmentObservableList);\r\n                managerCommissionBaseTable.getItems().remove(emp1);\r\n                managerCommissionBaseSalariedArrayList.remove(emp1);\r\n                commissionBaseSalariedArrayList.remove(emp1);\r\n                break;\r\n\r\n            case \"hourly-salaried\":\r\n                HourlySalariedEmployee emp2 = managerHourlySalaryTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp2.getDepartment().getName();\r\n\r\n                for(Department department2 : departmentArrayList){\r\n                    if(department2.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department2);\r\n                    }\r\n                }\r\n                emp2.setActive(false);\r\n                emp2.setEndDate(LocalDate.now().toString());\r\n                emp2.setStatus(statusCombo.getValue());\r\n                Department department2 = emp2.getDepartment();\r\n                department2.setHasManager(false);\r\n                department2.setNumberOfActiveEmployees(department2.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department2);\r\n                hourlySalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                DepartmentCombo.setItems(departmentObservableList);\r\n                managerHourlySalaryTable.getItems().remove(emp2);\r\n                managerHourlySalariedArrayList.remove(emp2);\r\n                hourlySalariedArrayList.remove(emp2);\r\n                break;\r\n\r\n            case \"commission-salaried\":\r\n                CommissionSalariedEmployee emp3 = managerCommissionSalaryTable.getSelectionModel().getSelectedItem();\r\n                departmentName = emp3.getDepartment().getName();\r\n\r\n                for(Department department3 : departmentArrayList){\r\n                    if(department3.getName().equals(departmentName)){\r\n                        index = departmentArrayList.indexOf(department3);\r\n                    }\r\n                }\r\n                emp3.setActive(false);\r\n                emp3.setEndDate(LocalDate.now().toString());\r\n                emp3.setStatus(statusCombo.getValue());\r\n                Department department3 = emp3.getDepartment();\r\n                department3.setHasManager(false);\r\n                department3.setNumberOfActiveEmployees(department3.getNumberOfActiveEmployees()-1);\r\n                departmentArrayList.set(index,department3);\r\n                commissionSalaryWriteToFile();\r\n                departmentWriteToFile();\r\n                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n                DepartmentCombo.setItems(departmentObservableList);\r\n                managerCommissionSalaryTable.getItems().remove(emp3);\r\n                managerCommissionSalariedArrayList.remove(emp3);\r\n                commissionBaseSalariedArrayList.remove(emp3);\r\n                break;\r\n        }\r\n        addManagerButton.setDisable(false);\r\n        statusCombo.setVisible(false);\r\n        applyButton2.setVisible(false);\r\n        cancelButton2.setVisible(false);\r\n        switch (managerPickTypeCombo.getValue()) {\r\n            case \"base-salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                baseSalaryField.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                baseSalaryField.setText(\"\");\r\n\r\n                break;\r\n\r\n            case \"base-commission salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                numberOfSalesField2.setEditable(true);\r\n                baseSalaryField.setEditable(true);\r\n                commissionRateField2.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                baseSalaryField.setText(\"\");\r\n                commissionRateField2.setText(\"\");\r\n                numberOfSalesField2.setText(\"\");\r\n                break;\r\n\r\n            case \"hourly-salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                PayPerHourField.setEditable(true);\r\n                amountOfHoursField.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                PayPerHourField.setText(\"\");\r\n                amountOfHoursField.setText(\"\");\r\n                break;\r\n\r\n            case \"commission-salaried\":\r\n                managerPickTypeCombo.setEditable(false);\r\n                nameField.setEditable(true);\r\n                familyField.setEditable(true);\r\n                nationalIdField.setEditable(true);\r\n                phoneField.setEditable(true);\r\n                birthDatePicker.setEditable(false);\r\n                birthDatePicker.setDisable(false);\r\n                numberOfSalesField.setEditable(true);\r\n                commissionRateField.setEditable(true);\r\n                managerBonusField.setEditable(true);\r\n                DepartmentCombo.setDisable(false);\r\n\r\n                nameField.setText(\"\");\r\n                familyField.setText(\"\");\r\n                nationalIdField.setText(\"\");\r\n                phoneField.setText(\"\");\r\n                managerBonusField.setText(\"\");\r\n                birthDatePicker.setValue(null);\r\n                DepartmentCombo.setValue(null);\r\n                baseSalaryField.setText(\"\");\r\n                commissionRateField.setText(\"\");\r\n                numberOfSalesField.setText(\"\");\r\n                break;\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onCancelButton2(ActionEvent event) {\r\n        statusCombo.setVisible(false);\r\n        applyButton2.setVisible(false);\r\n        cancelButton2.setVisible(false);\r\n    }\r\n\r\n    @FXML\r\n    void onDeActiveButton(ActionEvent event) {\r\n        statusCombo.setVisible(true);\r\n        applyButton2.setVisible(true);\r\n        cancelButton2.setVisible(true);\r\n    }\r\n\r\n    @FXML\r\n    void onEmployeeRadio(ActionEvent event) throws  IOException {\r\n        if (employeeRadioButton.isSelected()) {\r\n            managerRadioButton.setDisable(true);\r\n        }\r\n        else {\r\n            managerRadioButton.setDisable(false);\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onManagerRadio(ActionEvent event) throws  IOException {\r\n        if (managerRadioButton.isSelected()) {\r\n            employeeRadioButton.setDisable(true);\r\n        }\r\n        else {\r\n            employeeRadioButton.setDisable(false);\r\n        }\r\n    }\r\n    //get items from table.\r\n    @FXML\r\n    void managerBaseSalaryTableGetItem(MouseEvent event) {\r\n        int index = managerBaseSalaryTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"base-salaried\");\r\n        nameField.setText(managerBaseSalaryNameColumn.getCellData(index));\r\n        familyField.setText(managerBaseSalaryFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerBaseSalaryNationalColumn.getCellData(index));\r\n        phoneField.setText(managerBaseSalaryPhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerBaseSalaryBirthColumn.getCellData(index)));\r\n        baseSalaryField.setText(String.valueOf(managerBaseSalaryColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerBaseSalaryBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerBaseSalaryDepartmentColumn.getCellData(index));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        baseSalaryField.setEditable(false);\r\n        managerBonusField.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n        deActiveButton.setVisible(true);\r\n        editButton.setVisible(true);\r\n        addManagerButton.setDisable(true);\r\n    }\r\n\r\n    @FXML\r\n    void managerCommissionBaseSalaryTableGetItem(MouseEvent event) {\r\n        int index = managerCommissionBaseTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"base-commission salaried\");\r\n        nameField.setText(managerCommissionBaseNameColumn.getCellData(index));\r\n        familyField.setText(managerCommissionBaseFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerCommissionBaseNationalColumn.getCellData(index));\r\n        phoneField.setText(managerCommissionBasePhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerCommissionBaseBirthColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerCommissionBaseBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerCommissionBaseDepartmentColumn.getCellData(index));\r\n        baseSalaryField.setText(String.valueOf(managerCommissionBaseSalaryColumn.getCellData(index)));\r\n        numberOfSalesField2.setText(String.valueOf(managerCommissionBaseNumberOfSalesColumn.getCellData(index)));\r\n        commissionRateField2.setText(String.valueOf(managerCommissionBaseRateColumn.getCellData(index)));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        baseSalaryField.setEditable(false);\r\n        managerBonusField.setEditable(false);\r\n        numberOfSalesField2.setEditable(false);\r\n        commissionRateField2.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n        deActiveButton.setVisible(true);\r\n        editButton.setVisible(true);\r\n        addManagerButton.setDisable(true);\r\n    }\r\n\r\n    @FXML\r\n    void managerCommissionSalaryTableGetItem(MouseEvent event) {\r\n        int index = managerCommissionSalaryTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"commission-salaried\");\r\n        nameField.setText(managerCommissionSalaryNameColumn.getCellData(index));\r\n        familyField.setText(managerCommissionSalaryFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerCommissionSalaryNationalColumn.getCellData(index));\r\n        phoneField.setText(managerCommissionSalaryPhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerCommissionSalaryBirthColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerCommissionSalaryBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerCommissionSalaryDepartmentColumn.getCellData(index));\r\n        numberOfSalesField.setText(String.valueOf(managerCommissionSalarySalesColumn.getCellData(index)));\r\n        commissionRateField.setText(String.valueOf(managerCommissionSalaryRateColumn.getCellData(index)));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        managerBonusField.setEditable(false);\r\n        numberOfSalesField.setEditable(false);\r\n        commissionRateField.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n        deActiveButton.setVisible(true);\r\n        editButton.setVisible(true);\r\n        addManagerButton.setDisable(true);\r\n    }\r\n\r\n    @FXML\r\n    void managerHourlySalaryTableGetItem(MouseEvent event) {\r\n        int index = managerHourlySalaryTable.getSelectionModel().getSelectedIndex();\r\n\r\n        if(index <= -1){\r\n            return;\r\n        }\r\n\r\n        managerPickTypeCombo.setValue(\"hourly-salaried\");\r\n        nameField.setText(managerHourlySalaryNameColumn.getCellData(index));\r\n        familyField.setText(managerHourlySalaryFamilyColumn.getCellData(index));\r\n        nationalIdField.setText(managerHourlySalaryNationalColumn.getCellData(index));\r\n        phoneField.setText(managerHourlySalaryPhoneColumn.getCellData(index));\r\n        birthDatePicker.setValue(LocalDate.parse(managerHourlySalaryBirthColumn.getCellData(index)));\r\n        managerBonusField.setText(String.valueOf(managerHourlySalaryBonusColumn.getCellData(index)));\r\n        DepartmentCombo.setValue(managerHourlySalaryDepartmentColumn.getCellData(index));\r\n        PayPerHourField.setText(String.valueOf(managerHourlySalaryPayColumn.getCellData(index)));\r\n        amountOfHoursField.setText(String.valueOf(managerHourlySalaryAmountOfHoursColumn.getCellData(index)));\r\n\r\n        managerPickTypeCombo.setEditable(false);\r\n        nameField.setEditable(false);\r\n        familyField.setEditable(false);\r\n        nationalIdField.setEditable(false);\r\n        phoneField.setEditable(false);\r\n        birthDatePicker.setEditable(false);\r\n        birthDatePicker.setDisable(true);\r\n        managerBonusField.setEditable(false);\r\n        PayPerHourField.setEditable(false);\r\n        amountOfHoursField.setEditable(false);\r\n        DepartmentCombo.setEditable(false);\r\n        DepartmentCombo.setDisable(true);\r\n        deActiveButton.setVisible(true);\r\n        editButton.setVisible(true);\r\n        addManagerButton.setDisable(true);\r\n    }\r\n\r\n    @FXML\r\n    void unlockFields(MouseEvent event) {\r\n        if(event.getClickCount() == 2) {\r\n            statusCombo.setVisible(false);\r\n            applyButton.setVisible(false);\r\n            cancelButton.setVisible(false);\r\n            employeeRadioButton.setVisible(false);\r\n            managerRadioButton.setVisible(false);\r\n            addManagerButton.setDisable(false);\r\n            switch (managerPickTypeCombo.getValue()) {\r\n                case \"base-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    baseSalaryField.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    baseSalaryField.setText(\"\");\r\n                    deActiveButton.setVisible(false);\r\n                    editButton.setVisible(false);\r\n\r\n                    break;\r\n\r\n                case \"base-commission salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    numberOfSalesField2.setEditable(true);\r\n                    baseSalaryField.setEditable(true);\r\n                    commissionRateField2.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    baseSalaryField.setText(\"\");\r\n                    commissionRateField2.setText(\"\");\r\n                    numberOfSalesField2.setText(\"\");\r\n                    deActiveButton.setVisible(false);\r\n                    editButton.setVisible(false);\r\n                    break;\r\n\r\n                case \"hourly-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    PayPerHourField.setEditable(true);\r\n                    amountOfHoursField.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    PayPerHourField.setText(\"\");\r\n                    amountOfHoursField.setText(\"\");\r\n                    deActiveButton.setVisible(false);\r\n                    editButton.setVisible(false);\r\n                    break;\r\n\r\n                case \"commission-salaried\":\r\n                    managerPickTypeCombo.setEditable(false);\r\n                    nameField.setEditable(true);\r\n                    familyField.setEditable(true);\r\n                    nationalIdField.setEditable(true);\r\n                    phoneField.setEditable(true);\r\n                    birthDatePicker.setEditable(false);\r\n                    birthDatePicker.setDisable(false);\r\n                    numberOfSalesField.setEditable(true);\r\n                    commissionRateField.setEditable(true);\r\n                    managerBonusField.setEditable(true);\r\n                    DepartmentCombo.setDisable(false);\r\n\r\n                    nameField.setText(\"\");\r\n                    familyField.setText(\"\");\r\n                    nationalIdField.setText(\"\");\r\n                    phoneField.setText(\"\");\r\n                    managerBonusField.setText(\"\");\r\n                    birthDatePicker.setValue(null);\r\n                    DepartmentCombo.setValue(null);\r\n                    baseSalaryField.setText(\"\");\r\n                    commissionRateField.setText(\"\");\r\n                    numberOfSalesField.setText(\"\");\r\n                    deActiveButton.setVisible(false);\r\n                    editButton.setVisible(false);\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n    @FXML\r\n    void onManagerPickTypeCombo(ActionEvent event) {\r\n        switch (managerPickTypeCombo.getValue()) {\r\n            case \"base-salaried\":\r\n                managerBaseSalaryTable.setVisible(true);\r\n                baseSalaryField.setVisible(true);\r\n                managerHourlySalaryTable.setVisible(false);\r\n                PayPerHourField.setVisible(false);\r\n                amountOfHoursField.setVisible(false);\r\n                commissionRateField.setVisible(false);\r\n                numberOfSalesField.setVisible(false);\r\n                managerCommissionSalaryTable.setVisible(false);\r\n                managerCommissionBaseTable.setVisible(false);\r\n                numberOfSalesField2.setVisible(false);\r\n                commissionRateField2.setVisible(false);\r\n\r\n                break;\r\n\r\n            case \"base-commission salaried\":\r\n                managerBaseSalaryTable.setVisible(false);\r\n                baseSalaryField.setVisible(true);\r\n                managerHourlySalaryTable.setVisible(false);\r\n                PayPerHourField.setVisible(false);\r\n                amountOfHoursField.setVisible(false);\r\n                commissionRateField.setVisible(false);\r\n                numberOfSalesField.setVisible(false);\r\n                managerCommissionSalaryTable.setVisible(false);\r\n                managerCommissionBaseTable.setVisible(true);\r\n                numberOfSalesField2.setVisible(true);\r\n                commissionRateField2.setVisible(true);\r\n\r\n                break;\r\n\r\n            case \"hourly-salaried\":\r\n                managerBaseSalaryTable.setVisible(false);\r\n                baseSalaryField.setVisible(false);\r\n                managerHourlySalaryTable.setVisible(true);\r\n                PayPerHourField.setVisible(true);\r\n                amountOfHoursField.setVisible(true);\r\n                commissionRateField.setVisible(false);\r\n                numberOfSalesField.setVisible(false);\r\n                managerCommissionSalaryTable.setVisible(false);\r\n                managerCommissionBaseTable.setVisible(false);\r\n                numberOfSalesField2.setVisible(false);\r\n                commissionRateField2.setVisible(false);\r\n\r\n                break;\r\n\r\n            case \"commission-salaried\":\r\n                managerBaseSalaryTable.setVisible(false);\r\n                baseSalaryField.setVisible(false);\r\n                managerHourlySalaryTable.setVisible(false);\r\n                PayPerHourField.setVisible(false);\r\n                amountOfHoursField.setVisible(false);\r\n                commissionRateField.setVisible(true);\r\n                numberOfSalesField.setVisible(true);\r\n                managerCommissionSalaryTable.setVisible(true);\r\n                managerCommissionBaseTable.setVisible(false);\r\n                numberOfSalesField2.setVisible(false);\r\n                commissionRateField2.setVisible(false);\r\n\r\n                break;\r\n        }\r\n    }\r\n\r\n    @Override\r\n    public void initialize(URL url, ResourceBundle resourceBundle) {\r\n        //manger base salary set table view.\r\n        managerBaseSalaryColumn.setCellValueFactory(new PropertyValueFactory<>(\"baseSalary\"));\r\n        managerBaseSalaryEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerBaseSalaryBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerBaseSalaryBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerBaseSalaryFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerBaseSalaryIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerBaseSalaryNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerBaseSalaryNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerBaseSalaryPhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        managerBaseSalaryDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        baseSalaryReadFromFile();\r\n        //manager hourly salary set table view.\r\n        managerHourlySalaryAmountOfHoursColumn.setCellValueFactory(new PropertyValueFactory<>(\"amountOfHours\"));\r\n        managerHourlySalaryBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerHourlySalaryBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerHourlySalaryDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        managerHourlySalaryEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerHourlySalaryFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerHourlySalaryIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerHourlySalaryNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerHourlySalaryNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerHourlySalaryPayColumn.setCellValueFactory(new PropertyValueFactory<>(\"payPerHour\"));\r\n        managerHourlySalaryPhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        hourlySalaryReadFromFile();\r\n        //manager commission Salary set table view.\r\n        managerCommissionSalaryBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerCommissionSalaryBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerCommissionSalaryDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        managerCommissionSalaryEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerCommissionSalaryFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerCommissionSalaryIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerCommissionSalaryNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerCommissionSalaryNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerCommissionSalaryPhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        managerCommissionSalaryRateColumn.setCellValueFactory(new PropertyValueFactory<>(\"commissionRate\"));\r\n        managerCommissionSalarySalesColumn.setCellValueFactory(new PropertyValueFactory<>(\"numberOfSales\"));\r\n        commissionSalaryReadFromFile();\r\n        //manager commission salary set table view.\r\n        managerCommissionBaseBirthColumn.setCellValueFactory(new PropertyValueFactory<>(\"birthDate\"));\r\n        managerCommissionBaseBonusColumn.setCellValueFactory(new PropertyValueFactory<>(\"managerBonus\"));\r\n        managerCommissionBaseDepartmentColumn.setCellValueFactory(new PropertyValueFactory<>(\"department\"));\r\n        managerCommissionBaseEarningColumn.setCellValueFactory(new PropertyValueFactory<>(\"earning\"));\r\n        managerCommissionBaseFamilyColumn.setCellValueFactory(new PropertyValueFactory<>(\"lastName\"));\r\n        managerCommissionBaseIdColumn.setCellValueFactory(new PropertyValueFactory<>(\"ID\"));\r\n        managerCommissionBaseNameColumn.setCellValueFactory(new PropertyValueFactory<>(\"firstName\"));\r\n        managerCommissionBaseNationalColumn.setCellValueFactory(new PropertyValueFactory<>(\"nationalID\"));\r\n        managerCommissionBaseNumberOfSalesColumn.setCellValueFactory(new PropertyValueFactory<>(\"numberOfSales\"));\r\n        managerCommissionBasePhoneColumn.setCellValueFactory(new PropertyValueFactory<>(\"phoneNumber\"));\r\n        managerCommissionBaseRateColumn.setCellValueFactory(new PropertyValueFactory<>(\"commissionRate\"));\r\n        managerCommissionBaseSalaryColumn.setCellValueFactory(new PropertyValueFactory<>(\"baseSalary\"));\r\n        commissionBaseSalaryReadFromFile();\r\n        //initialize department comboBox and pick type combo box.\r\n        departmentReadFromFile();\r\n        managerPickTypeCombo.setItems(typeOfEmployee);\r\n        DepartmentCombo.setItems(departmentObservableList);\r\n\r\n        // Initializing Status Combobox\r\n        statusArrayList.add(Status.NO_PAY_DISMISSAL);\r\n        statusArrayList.add(Status.FIRED);\r\n        statusArrayList.add(Status.RETIRED);\r\n        statusArrayList.add(Status.END_OF_CONTRACT);\r\n        statusObservableList = FXCollections.observableArrayList(statusArrayList);\r\n        statusCombo.setItems(statusObservableList);\r\n\r\n\r\n//        Remember to add these lines later:\r\n//        if (managerRadioButton.isSelected()) {\r\n//            managerBonusTextField.setVisible(true);\r\n//        }\r\n//        else {\r\n//            managerBonusTextField.setVisible(false);\r\n//        }\r\n    }\r\n\r\n    // department read and write to file method.\r\n    private void departmentReadFromFile() {\r\n        if(departmentFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(departmentFile));\r\n                departmentArrayList = (ArrayList<Department>) ois.readObject();\r\n                ois.close();\r\n                departmentObservableList = FXCollections.observableArrayList(departmentArrayList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no department to show ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void departmentWriteToFile() {\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(departmentFile));\r\n            oos.writeObject(departmentArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in Department file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    //base Salary read and write to file methods.\r\n    private void baseSalaryReadFromFile() {\r\n\r\n        if(baseSalariedFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(baseSalariedFile));\r\n                baseSalariedArrayList = (ArrayList<BaseSalariedEmployee>) ois.readObject();\r\n                for (BaseSalariedEmployee emp : baseSalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerBaseSalariedArrayList.contains(emp)) {\r\n                        managerBaseSalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerBaseSalariedEmployeeObservableList = managerBaseSalaryTable.getItems();\r\n                managerBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerBaseSalariedArrayList);\r\n                managerBaseSalaryTable.setItems(managerBaseSalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no base Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void baseSalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(baseSalariedFile));\r\n            oos.writeObject(baseSalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in Base Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    // hourly salary read and write to file.\r\n    private void hourlySalaryReadFromFile(){\r\n\r\n        if(hourlySalaryFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(hourlySalaryFile));\r\n                hourlySalariedArrayList = (ArrayList<HourlySalariedEmployee>) ois.readObject();\r\n                for (HourlySalariedEmployee emp : hourlySalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerHourlySalariedArrayList.contains(emp)) {\r\n                        managerHourlySalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerHourlySalariedEmployeeObservableList = managerHourlySalaryTable.getItems();\r\n                managerHourlySalariedEmployeeObservableList = FXCollections.observableArrayList(managerHourlySalariedArrayList);\r\n                managerHourlySalaryTable.setItems(managerHourlySalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no hourly Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void hourlySalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(hourlySalaryFile));\r\n            oos.writeObject(hourlySalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in hourly Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    //Commission Salary read and write to file.\r\n\r\n    private void commissionSalaryReadFromFile(){\r\n\r\n        if(commissionSalaryFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(commissionSalaryFile));\r\n                commissionSalariedArrayList = (ArrayList<CommissionSalariedEmployee>) ois.readObject();\r\n                for (CommissionSalariedEmployee emp : commissionSalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerCommissionSalariedArrayList.contains(emp)) {\r\n                        managerCommissionSalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerCommissionSalariedEmployeeObservableList = managerCommissionSalaryTable.getItems();\r\n                managerCommissionSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionSalariedArrayList);\r\n                managerCommissionSalaryTable.setItems(managerCommissionSalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no commission Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void commissionSalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(commissionSalaryFile));\r\n            oos.writeObject(commissionSalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in commission Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n\r\n    //Commission base salary read and write to file.\r\n    private void commissionBaseSalaryReadFromFile(){\r\n\r\n        if(commissionBaseSalaryFile.isFile()) {\r\n            try {\r\n                ObjectInputStream ois;\r\n                ois = new ObjectInputStream(new FileInputStream(commissionBaseSalaryFile));\r\n                commissionBaseSalariedArrayList = (ArrayList<CommissionBaseSalariedEmployee>) ois.readObject();\r\n                for (CommissionBaseSalariedEmployee emp : commissionBaseSalariedArrayList) {\r\n                    if (emp.isManager() && emp.isActive() && !managerCommissionBaseSalariedArrayList.contains(emp)) {\r\n                        managerCommissionBaseSalariedArrayList.add(emp);\r\n                    }\r\n                }\r\n                ois.close();\r\n                managerCommissionBaseSalariedEmployeeObservableList = managerCommissionBaseTable.getItems();\r\n                managerCommissionBaseSalariedEmployeeObservableList = FXCollections.observableArrayList(managerCommissionBaseSalariedArrayList);\r\n                managerCommissionBaseTable.setItems(managerCommissionBaseSalariedEmployeeObservableList);\r\n            } catch (IOException | ClassNotFoundException e) {\r\n                Alert alert = new Alert(Alert.AlertType.ERROR);\r\n                alert.setTitle(\"Nothing to show !\");\r\n                alert.setContentText(\"There is no Commission Base Salaried Employee in this department ...\");\r\n                alert.showAndWait();\r\n            }\r\n        }\r\n    }\r\n\r\n    private void commissionBaseSalaryWriteToFile(){\r\n        try {\r\n            ObjectOutputStream oos;\r\n            oos = new ObjectOutputStream(new FileOutputStream(commissionBaseSalaryFile));\r\n            oos.writeObject(commissionBaseSalariedArrayList);\r\n            oos.close();\r\n        } catch (IOException e) {\r\n            Alert alert = new Alert(Alert.AlertType.ERROR);\r\n            alert.setTitle(\"ERROR !\");\r\n            alert.setContentText(\"Something went wrong while trying to write in Commission Base Salary file ...\");\r\n            alert.showAndWait();\r\n        }\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/myfinalproject/AddManagerSceneController.java b/src/main/java/org/example/myfinalproject/AddManagerSceneController.java
--- a/src/main/java/org/example/myfinalproject/AddManagerSceneController.java	
+++ b/src/main/java/org/example/myfinalproject/AddManagerSceneController.java	
@@ -599,7 +599,7 @@
             else if(managerCommissionSalaryTable.getSelectionModel().getSelectedIndex() == -1){
                 emp = managerCommissionSalaryTable.getSelectionModel().getSelectedItem();
             }
-            else if(managerHourlySalaryTable.getSelectionModel().getSelectedIndex() == -1){
+            else if(managerHourlySalaryTable.getSelectionModel() == -1){
                 emp = managerHourlySalaryTable.getSelectionModel().getSelectedItem();
             }
 
